{"input":{"ourVersion":"1.63.0","ourProductDate":"2021-12-07T06:26:56.179Z","commit":"7db1a2b88f7557e0a43fec75b6ba7e50b3e9f77e","locale":"en","devMode":false,"absoluteFolderPath":"C:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1639177893257},"result":[{"name":"doxdocgen","displayName":"Doxygen Documentation Generator","description":"Let me generate Doxygen documentation from your source code for you.","version":"1.3.2","publisher":"cschlosser","engines":{"vscode":"^1.55.0"},"categories":["Other"],"badges":[{"url":"https://img.shields.io/github/workflow/status/cschlosser/doxdocgen/CI/master","href":"https://github.com/cschlosser/doxdocgen/actions/workflows/ci.yml?query=branch%3Amaster+","description":"Continous integration"},{"url":"https://img.shields.io/github/workflow/status/cschlosser/doxdocgen/CD?label=Release","href":"https://github.com/cschlosser/doxdocgen/actions/workflows/cd.yml?query=event%3Arelease++","description":"Release pipeline"},{"url":"https://codecov.io/gh/cschlosser/doxdocgen/branch/master/graph/badge.svg","href":"https://codecov.io/gh/cschlosser/doxdocgen","description":"Code coverage"}],"activationEvents":["onLanguage:cuda","onLanguage:cpp","onLanguage:c"],"contributes":{"configuration":{"type":"object","title":"Doxygen Documentation Generator Settings","properties":{"doxdocgen.c.triggerSequence":{"description":"Doxygen comment trigger. This character sequence triggers generation of Doxygen comments.","type":"string","default":"/**"},"doxdocgen.c.firstLine":{"description":"The first line of the comment that gets generated. If empty it won't get generated at all.","type":"string","default":"/**"},"doxdocgen.c.commentPrefix":{"description":"The prefix that is used for each comment line except for first and last.","type":"string","default":" * "},"doxdocgen.c.lastLine":{"description":"The last line of the comment that gets generated. If empty it won't get generated at all.","type":"string","default":" */"},"doxdocgen.c.setterText":{"description":"Smart text snippet for setters.","type":"string","default":"Set the {name} object"},"doxdocgen.c.getterText":{"description":"Smart text snippet for getters.","type":"string","default":"Get the {name} object"},"doxdocgen.c.factoryMethodText":{"description":"Smart text snippet for factory methods/functions.","type":"string","default":"Create a {name} object"},"doxdocgen.cpp.tparamTemplate":{"description":"The template of the template parameter Doxygen line(s) that are generated. If empty it won't get generated at all.","type":"string","default":"@tparam {param} "},"doxdocgen.cpp.ctorText":{"description":"Smart text snippet for constructors.","type":"string","default":"Construct a new {name} object"},"doxdocgen.cpp.dtorText":{"description":"Smart text snippet for destructors.","type":"string","default":"Destroy the {name} object"},"doxdocgen.file.fileTemplate":{"description":"The template for the file parameter in Doxygen.","type":"string","default":"@file {name}"},"doxdocgen.file.copyrightTag":{"markdownDescription":"File copyright documentation tag.  Array of strings will be converted to one line per element. Can template `{year}`.","type":["array","string"],"default":["@copyright Copyright (c) {year}"]},"doxdocgen.file.versionTag":{"description":"Version number for the file.","type":"string","default":"@version 0.1"},"doxdocgen.file.customTag":{"markdownDescription":"Additional file documentation.  Array of strings will be converted to one line per element. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.","type":["array","string"],"default":[]},"doxdocgen.file.fileOrder":{"markdownDescription":"The order to use for the file comment. Values can be used multiple times. Valid values are `file`, `author`, `brief`, `version`, `date`, `empty`, `copyright` and `custom`.","type":["array","string"],"default":["file","author","brief","version","date","empty","copyright","empty","custom"]},"doxdocgen.generic.includeTypeAtReturn":{"description":"Whether include type information at return.","type":"boolean","default":true},"doxdocgen.generic.boolReturnsTrueFalse":{"markdownDescription":"If this is enabled, the documentation for a `bool` return value will be split into `true` and `false` entries.","type":"boolean","default":true},"doxdocgen.generic.briefTemplate":{"description":"The template of the brief Doxygen line that is generated. If empty it won't get generated at all.","type":"string","default":"@brief {text}"},"doxdocgen.generic.paramTemplate":{"description":"The template of the param Doxygen line(s) that are generated. If empty it won't get generated at all.","type":"string","default":"@param {param} "},"doxdocgen.generic.returnTemplate":{"description":"The template of the return Doxygen line that is generated. If empty it won't get generated at all.","type":"string","default":"@return {type} "},"doxdocgen.generic.linesToGet":{"description":"How many lines the plugin should look for to find the end of the declaration. Please be aware that setting this value too low could improve the speed of comment generation by a very slim margin but the plugin also may not correctly detect all declarations or definitions anymore.","type":"number","default":20},"doxdocgen.generic.authorName":{"markdownDescription":"Set the name of the author.  Replaces `{author}`.","type":"string","default":"your name"},"doxdocgen.generic.authorEmail":{"markdownDescription":"Set the e-mail address of the author.  Replaces `{email}`.","type":"string","default":"you@domain.com"},"doxdocgen.generic.authorTag":{"markdownDescription":"Set the style of the author tag and your name.  Can template `{author}` and `{email}`.","type":"string","default":"@author {author} ({email})"},"doxdocgen.generic.dateTemplate":{"description":"The template for the date parameter in Doxygen.","type":"string","default":"@date {date}"},"doxdocgen.generic.dateFormat":{"description":"The format to use for the date.","type":"string","default":"YYYY-MM-DD"},"doxdocgen.generic.generateSmartText":{"description":"Decide if you want to get smart text for certain commands.","type":"boolean","default":true},"doxdocgen.generic.splitCasingSmartText":{"markdownDescription":"Decide if the values put into `{name}` should be split according to their casing.","type":"boolean","default":true},"doxdocgen.generic.order":{"markdownDescription":"The order to use for the comment generation. Values can be used multiple times. Valid values are `brief`, `empty`, `tparam`, `param`, `return`, `custom`, `author`, `date`, `version` and `copyright`.","type":["array","string"],"default":["brief","empty","tparam","param","return","custom"]},"doxdocgen.generic.customTags":{"markdownDescription":"Custom tags to be added to the generic order. One tag per line will be added. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.","type":["array","string"],"default":[]},"doxdocgen.generic.filteredKeywords":{"description":"Array of keywords that should be removed from the input prior to parsing.","type":"array","default":[]},"doxdocgen.generic.useGitUserName":{"markdownDescription":"Substitute `{author}` with `git config --get user.name`.","type":"boolean","default":false},"doxdocgen.generic.useGitUserEmail":{"markdownDescription":"Substitute `{email}` with `git config --get user.email`.","type":"boolean","default":false},"doxdocgen.generic.commandSuggestion":{"description":"Provide intellisense and snippet for doxygen commands","type":"boolean","default":true},"doxdocgen.generic.commandSuggestionAddPrefix":{"markdownDescription":"Add `\\` in doxygen command suggestion for better readbility (need to enable commandSuggestion)","type":"boolean","default":false}}}},"icon":"images/icon.png","keywords":["cpp","c++","c","Doxygen"],"license":"SEE LICENSE IN LICENSE","main":"./out/extension","repository":{"type":"git","url":"https://github.com/cschlosser/doxdocgen.git"},"bugs":{"url":"https://github.com/cschlosser/doxdocgen/labels/bug"},"scripts":{"vscode:prepublish":"yarn compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","test":"yarn compile && node ./out/test/runTests.js","cov":"yarn clean && nyc yarn test","lint":"tslint -c tslint.json 'src/**/*.ts'","clean":"rm -rf coverage .nyc_output out"},"dependencies":{"env-var":"^4.1.0","moment":"^2.20.1","opn":"^5.2.0","simple-git":"^2.38.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"0.1.3","@types/mocha":"^5.2.7","@types/node":"12.7.1","@types/vscode":"^1.55.0","decache":"^4.5.1","glob":"^7.1.6","handlebars":"^4.7.3","minimist":">=1.2.2","mocha":"^8.3.2","nyc":"12.0.1","ovsx":"^0.1.0","remap-istanbul":"^0.13.0","source-map-support":"^0.5.19","ts-node":"^9.1.1","tslint":"^5.20.0","typescript":"^4.2.4","vsce":"^1.88.0","vscode-test":"^1.5.2","yargs-parser":">=13.1.2"},"uuid":"da7e26d5-d57c-4742-ab47-d77fb189e195","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"cschlosser.doxdocgen","identifier":{"value":"cschlosser.doxdocgen","_lower":"cschlosser.doxdocgen"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\cschlosser.doxdocgen-1.3.2","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/cschlosser.doxdocgen-1.3.2","scheme":"file"}},{"name":"auto-header","displayName":"auto-header","description":"This extension allows quickly add file header in the active text editor. And also allows to update the modify time and modifier automatic in the file header comments.","version":"1.0.1","icon":"images/icon.png","publisher":"DanielLin","author":"Daniel Lin","license":"MIT","private":true,"main":"./out/extension","repository":{"type":"git","url":"https://github.com/shanquanju/vscode.auto-header.git"},"scripts":{"build":"vsce package","vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"dependencies":{"moment":"^2.24.0","path":"^0.12.7","vscode":"^1.1.0"},"devDependencies":{"@types/chai":"^4.1.7","@types/mocha":"^2.2.42","@types/node":"^8.10.25","fs":"^0.0.1-security","tslint":"^5.8.0","typescript":"^2.6.1"},"engines":{"vscode":"^1.1.0"},"categories":["Other"],"keywords":["vscode","auto-header","comments"],"activationEvents":["*","onCommand:extension.autoHeader"],"contributes":{"configuration":{"type":"object","title":"Auto header Configuration","properties":{"autoHeader":{"type":"object","default":{},"description":""}}},"commands":[{"command":"extension.autoHeader","title":"Auto Header"}],"keybindings":[{"command":"extension.autoHeader","key":"ctrl+alt+i","mac":"ctrl+cmd+i","when":"editorTextFocus"}]},"uuid":"ab781659-9267-425f-9bdb-1919db00892e","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"DanielLin.auto-header","identifier":{"value":"DanielLin.auto-header","_lower":"daniellin.auto-header"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\daniellin.auto-header-1.0.1","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/daniellin.auto-header-1.0.1","scheme":"file"}},{"name":"better-cpp-syntax","displayName":"Better C++ Syntax","description":"The bleeding edge of the C++ syntax","version":"1.15.10","icon":"icon.png","scripts":{},"keywords":["C++","cpp","c","objective-c","objective-cpp","objective-c++","syntax","textmate","highlighting","coloring","color"],"engines":{"vscode":"^1.0.0"},"author":{"name":"Jeff Hykin"},"publisher":"jeff-hykin","categories":["Programming Languages"],"repository":{"url":"https://github.com/jeff-hykin/better-cpp-syntax","type":"git"},"contributes":{"grammars":[{"language":"cpp","scopeName":"source.cpp.embedded.macro","path":"./autogenerated/cpp.embedded.macro.tmLanguage.json","embeddedLanguages":{"meta.embedded.assembly.cpp":"asm"}},{"language":"cpp","scopeName":"source.cpp","path":"./autogenerated/cpp.tmLanguage.json","embeddedLanguages":{"meta.embedded.assembly.cpp":"asm","meta.preprocessor.macro.contents":"cpp"}}]},"devDependencies":{"chalk":"^2.4.2","dictionary-en-us":"^2.1.1","lodash":"^4.17.19","nspell":"^2.1.2","oniguruma":"^7.2.0","textmate-bailout":"^1.1.0","textmate-tester":"^1.1.0","vsce":"^1.99.0"},"dependencies":{"yargs":"^17.1.1"},"uuid":"73767f91-7dcb-43cb-90b3-596d073eea1f","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"jeff-hykin.better-cpp-syntax","identifier":{"value":"jeff-hykin.better-cpp-syntax","_lower":"jeff-hykin.better-cpp-syntax"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\jeff-hykin.better-cpp-syntax-1.15.10","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/jeff-hykin.better-cpp-syntax-1.15.10","scheme":"file"}},{"name":"vscode-language-pack-es","displayName":"Spanish Language Pack for Visual Studio Code","description":"Language pack extension for Spanish","version":"1.63.2","publisher":"MS-CEINTL","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-loc"},"license":"SEE MIT LICENSE IN LICENSE.md","engines":{"vscode":"^1.63.0"},"icon":"languagepack.png","categories":["Language Packs"],"contributes":{"localizations":[{"languageId":"es","languageName":"Spanish","localizedLanguageName":"español","translations":[{"id":"vscode","path":"./translations/main.i18n.json"},{"id":"vscode.bat","path":"./translations/extensions/bat.i18n.json"},{"id":"vscode.clojure","path":"./translations/extensions/clojure.i18n.json"},{"id":"vscode.coffeescript","path":"./translations/extensions/coffeescript.i18n.json"},{"id":"vscode.configuration-editing","path":"./translations/extensions/configuration-editing.i18n.json"},{"id":"vscode.cpp","path":"./translations/extensions/cpp.i18n.json"},{"id":"vscode.csharp","path":"./translations/extensions/csharp.i18n.json"},{"id":"vscode.css-language-features","path":"./translations/extensions/css-language-features.i18n.json"},{"id":"vscode.css","path":"./translations/extensions/css.i18n.json"},{"id":"vscode.dart","path":"./translations/extensions/dart.i18n.json"},{"id":"vscode.debug-auto-launch","path":"./translations/extensions/debug-auto-launch.i18n.json"},{"id":"vscode.debug-server-ready","path":"./translations/extensions/debug-server-ready.i18n.json"},{"id":"vscode.diff","path":"./translations/extensions/diff.i18n.json"},{"id":"vscode.docker","path":"./translations/extensions/docker.i18n.json"},{"id":"vscode.emmet","path":"./translations/extensions/emmet.i18n.json"},{"id":"vscode.extension-editing","path":"./translations/extensions/extension-editing.i18n.json"},{"id":"vscode.fsharp","path":"./translations/extensions/fsharp.i18n.json"},{"id":"vscode.git-base","path":"./translations/extensions/git-base.i18n.json"},{"id":"vscode.git-ui","path":"./translations/extensions/git-ui.i18n.json"},{"id":"vscode.git","path":"./translations/extensions/git.i18n.json"},{"id":"vscode.github-authentication","path":"./translations/extensions/github-authentication.i18n.json"},{"id":"vscode.github-browser","path":"./translations/extensions/github-browser.i18n.json"},{"id":"vscode.github","path":"./translations/extensions/github.i18n.json"},{"id":"vscode.go","path":"./translations/extensions/go.i18n.json"},{"id":"vscode.groovy","path":"./translations/extensions/groovy.i18n.json"},{"id":"vscode.grunt","path":"./translations/extensions/grunt.i18n.json"},{"id":"vscode.gulp","path":"./translations/extensions/gulp.i18n.json"},{"id":"vscode.handlebars","path":"./translations/extensions/handlebars.i18n.json"},{"id":"vscode.hlsl","path":"./translations/extensions/hlsl.i18n.json"},{"id":"vscode.html-language-features","path":"./translations/extensions/html-language-features.i18n.json"},{"id":"vscode.html","path":"./translations/extensions/html.i18n.json"},{"id":"vscode.image-preview","path":"./translations/extensions/image-preview.i18n.json"},{"id":"vscode.ini","path":"./translations/extensions/ini.i18n.json"},{"id":"vscode.ipynb","path":"./translations/extensions/ipynb.i18n.json"},{"id":"vscode.jake","path":"./translations/extensions/jake.i18n.json"},{"id":"vscode.java","path":"./translations/extensions/java.i18n.json"},{"id":"vscode.javascript","path":"./translations/extensions/javascript.i18n.json"},{"id":"vscode.json-language-features","path":"./translations/extensions/json-language-features.i18n.json"},{"id":"vscode.json","path":"./translations/extensions/json.i18n.json"},{"id":"vscode.julia","path":"./translations/extensions/julia.i18n.json"},{"id":"vscode.less","path":"./translations/extensions/less.i18n.json"},{"id":"vscode.log","path":"./translations/extensions/log.i18n.json"},{"id":"vscode.lua","path":"./translations/extensions/lua.i18n.json"},{"id":"vscode.make","path":"./translations/extensions/make.i18n.json"},{"id":"vscode.markdown-basics","path":"./translations/extensions/markdown-basics.i18n.json"},{"id":"vscode.markdown-language-features","path":"./translations/extensions/markdown-language-features.i18n.json"},{"id":"vscode.markdown-math","path":"./translations/extensions/markdown-math.i18n.json"},{"id":"vscode.markdown-notebook-math","path":"./translations/extensions/markdown-notebook-math.i18n.json"},{"id":"vscode.merge-conflict","path":"./translations/extensions/merge-conflict.i18n.json"},{"id":"vscode.microsoft-authentication","path":"./translations/extensions/microsoft-authentication.i18n.json"},{"id":"vscode.ms-vscode.github-browser","path":"./translations/extensions/ms-vscode.github-browser.i18n.json"},{"id":"vscode.ms-vscode.js-debug","path":"./translations/extensions/ms-vscode.js-debug.i18n.json"},{"id":"vscode.ms-vscode.node-debug","path":"./translations/extensions/ms-vscode.node-debug.i18n.json"},{"id":"vscode.ms-vscode.node-debug2","path":"./translations/extensions/ms-vscode.node-debug2.i18n.json"},{"id":"vscode.ms-vscode.remotehub","path":"./translations/extensions/ms-vscode.remotehub.i18n.json"},{"id":"vscode.notebook-markdown-extensions","path":"./translations/extensions/notebook-markdown-extensions.i18n.json"},{"id":"vscode.npm","path":"./translations/extensions/npm.i18n.json"},{"id":"vscode.objective-c","path":"./translations/extensions/objective-c.i18n.json"},{"id":"vscode.perl","path":"./translations/extensions/perl.i18n.json"},{"id":"vscode.php-language-features","path":"./translations/extensions/php-language-features.i18n.json"},{"id":"vscode.php","path":"./translations/extensions/php.i18n.json"},{"id":"vscode.powershell","path":"./translations/extensions/powershell.i18n.json"},{"id":"vscode.pug","path":"./translations/extensions/pug.i18n.json"},{"id":"vscode.python","path":"./translations/extensions/python.i18n.json"},{"id":"vscode.r","path":"./translations/extensions/r.i18n.json"},{"id":"vscode.razor","path":"./translations/extensions/razor.i18n.json"},{"id":"vscode.ruby","path":"./translations/extensions/ruby.i18n.json"},{"id":"vscode.rust","path":"./translations/extensions/rust.i18n.json"},{"id":"vscode.scss","path":"./translations/extensions/scss.i18n.json"},{"id":"vscode.search-result","path":"./translations/extensions/search-result.i18n.json"},{"id":"vscode.shaderlab","path":"./translations/extensions/shaderlab.i18n.json"},{"id":"vscode.shellscript","path":"./translations/extensions/shellscript.i18n.json"},{"id":"vscode.simple-browser","path":"./translations/extensions/simple-browser.i18n.json"},{"id":"vscode.sql","path":"./translations/extensions/sql.i18n.json"},{"id":"vscode.swift","path":"./translations/extensions/swift.i18n.json"},{"id":"vscode.testing-editor-contributions","path":"./translations/extensions/testing-editor-contributions.i18n.json"},{"id":"vscode.theme-abyss","path":"./translations/extensions/theme-abyss.i18n.json"},{"id":"vscode.theme-defaults","path":"./translations/extensions/theme-defaults.i18n.json"},{"id":"vscode.theme-kimbie-dark","path":"./translations/extensions/theme-kimbie-dark.i18n.json"},{"id":"vscode.theme-monokai-dimmed","path":"./translations/extensions/theme-monokai-dimmed.i18n.json"},{"id":"vscode.theme-monokai","path":"./translations/extensions/theme-monokai.i18n.json"},{"id":"vscode.theme-quietlight","path":"./translations/extensions/theme-quietlight.i18n.json"},{"id":"vscode.theme-red","path":"./translations/extensions/theme-red.i18n.json"},{"id":"vscode.theme-seti","path":"./translations/extensions/theme-seti.i18n.json"},{"id":"vscode.theme-solarized-dark","path":"./translations/extensions/theme-solarized-dark.i18n.json"},{"id":"vscode.theme-solarized-light","path":"./translations/extensions/theme-solarized-light.i18n.json"},{"id":"vscode.theme-tomorrow-night-blue","path":"./translations/extensions/theme-tomorrow-night-blue.i18n.json"},{"id":"vscode.typescript-basics","path":"./translations/extensions/typescript-basics.i18n.json"},{"id":"vscode.typescript-language-features","path":"./translations/extensions/typescript-language-features.i18n.json"},{"id":"vscode.vb","path":"./translations/extensions/vb.i18n.json"},{"id":"vscode.vscode-chrome-debug-core","path":"./translations/extensions/vscode-chrome-debug-core.i18n.json"},{"id":"ms-vscode.node-debug","path":"./translations/extensions/vscode-node-debug.i18n.json"},{"id":"ms-vscode.node-debug2","path":"./translations/extensions/vscode-node-debug2.i18n.json"},{"id":"vscode.vscode.bat","path":"./translations/extensions/vscode.bat.i18n.json"},{"id":"vscode.vscode.clojure","path":"./translations/extensions/vscode.clojure.i18n.json"},{"id":"vscode.vscode.coffeescript","path":"./translations/extensions/vscode.coffeescript.i18n.json"},{"id":"vscode.vscode.cpp","path":"./translations/extensions/vscode.cpp.i18n.json"},{"id":"vscode.vscode.csharp","path":"./translations/extensions/vscode.csharp.i18n.json"},{"id":"vscode.vscode.css","path":"./translations/extensions/vscode.css.i18n.json"},{"id":"vscode.vscode.docker","path":"./translations/extensions/vscode.docker.i18n.json"},{"id":"vscode.vscode.fsharp","path":"./translations/extensions/vscode.fsharp.i18n.json"},{"id":"vscode.vscode.go","path":"./translations/extensions/vscode.go.i18n.json"},{"id":"vscode.vscode.groovy","path":"./translations/extensions/vscode.groovy.i18n.json"},{"id":"vscode.vscode.handlebars","path":"./translations/extensions/vscode.handlebars.i18n.json"},{"id":"vscode.vscode.hlsl","path":"./translations/extensions/vscode.hlsl.i18n.json"},{"id":"vscode.vscode.html","path":"./translations/extensions/vscode.html.i18n.json"},{"id":"vscode.vscode.ini","path":"./translations/extensions/vscode.ini.i18n.json"},{"id":"vscode.vscode.java","path":"./translations/extensions/vscode.java.i18n.json"},{"id":"vscode.vscode.javascript","path":"./translations/extensions/vscode.javascript.i18n.json"},{"id":"vscode.vscode.json","path":"./translations/extensions/vscode.json.i18n.json"},{"id":"vscode.vscode.less","path":"./translations/extensions/vscode.less.i18n.json"},{"id":"vscode.vscode.log","path":"./translations/extensions/vscode.log.i18n.json"},{"id":"vscode.vscode.lua","path":"./translations/extensions/vscode.lua.i18n.json"},{"id":"vscode.vscode.make","path":"./translations/extensions/vscode.make.i18n.json"},{"id":"vscode.vscode.markdown","path":"./translations/extensions/vscode.markdown.i18n.json"},{"id":"vscode.vscode.objective-c","path":"./translations/extensions/vscode.objective-c.i18n.json"},{"id":"vscode.vscode.perl","path":"./translations/extensions/vscode.perl.i18n.json"},{"id":"vscode.vscode.php","path":"./translations/extensions/vscode.php.i18n.json"},{"id":"vscode.vscode.powershell","path":"./translations/extensions/vscode.powershell.i18n.json"},{"id":"vscode.vscode.pug","path":"./translations/extensions/vscode.pug.i18n.json"},{"id":"vscode.vscode.r","path":"./translations/extensions/vscode.r.i18n.json"},{"id":"vscode.vscode.razor","path":"./translations/extensions/vscode.razor.i18n.json"},{"id":"vscode.vscode.ruby","path":"./translations/extensions/vscode.ruby.i18n.json"},{"id":"vscode.vscode.rust","path":"./translations/extensions/vscode.rust.i18n.json"},{"id":"vscode.vscode.scss","path":"./translations/extensions/vscode.scss.i18n.json"},{"id":"vscode.vscode.shaderlab","path":"./translations/extensions/vscode.shaderlab.i18n.json"},{"id":"vscode.vscode.shellscript","path":"./translations/extensions/vscode.shellscript.i18n.json"},{"id":"vscode.vscode.sql","path":"./translations/extensions/vscode.sql.i18n.json"},{"id":"vscode.vscode.swift","path":"./translations/extensions/vscode.swift.i18n.json"},{"id":"vscode.vscode.theme-abyss","path":"./translations/extensions/vscode.theme-abyss.i18n.json"},{"id":"vscode.vscode.theme-defaults","path":"./translations/extensions/vscode.theme-defaults.i18n.json"},{"id":"vscode.vscode.theme-kimbie-dark","path":"./translations/extensions/vscode.theme-kimbie-dark.i18n.json"},{"id":"vscode.vscode.theme-monokai-dimmed","path":"./translations/extensions/vscode.theme-monokai-dimmed.i18n.json"},{"id":"vscode.vscode.theme-monokai","path":"./translations/extensions/vscode.theme-monokai.i18n.json"},{"id":"vscode.vscode.theme-quietlight","path":"./translations/extensions/vscode.theme-quietlight.i18n.json"},{"id":"vscode.vscode.theme-red","path":"./translations/extensions/vscode.theme-red.i18n.json"},{"id":"vscode.vscode.theme-solarized-dark","path":"./translations/extensions/vscode.theme-solarized-dark.i18n.json"},{"id":"vscode.vscode.theme-solarized-light","path":"./translations/extensions/vscode.theme-solarized-light.i18n.json"},{"id":"vscode.vscode.theme-tomorrow-night-blue","path":"./translations/extensions/vscode.theme-tomorrow-night-blue.i18n.json"},{"id":"vscode.vscode.typescript","path":"./translations/extensions/vscode.typescript.i18n.json"},{"id":"vscode.vscode.vb","path":"./translations/extensions/vscode.vb.i18n.json"},{"id":"vscode.vscode.vscode-theme-seti","path":"./translations/extensions/vscode.vscode-theme-seti.i18n.json"},{"id":"vscode.vscode.xml","path":"./translations/extensions/vscode.xml.i18n.json"},{"id":"vscode.vscode.yaml","path":"./translations/extensions/vscode.yaml.i18n.json"},{"id":"vscode.xml","path":"./translations/extensions/xml.i18n.json"},{"id":"vscode.yaml","path":"./translations/extensions/yaml.i18n.json"}]}]},"scripts":{"update":"cd ../vscode && npm run update-localization-extension es"},"uuid":"47e020a1-33db-4cc0-a1b4-42f97781749a","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"MS-CEINTL.vscode-language-pack-es","identifier":{"value":"MS-CEINTL.vscode-language-pack-es","_lower":"ms-ceintl.vscode-language-pack-es"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-ceintl.vscode-language-pack-es-1.63.2","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-ceintl.vscode-language-pack-es-1.63.2","scheme":"file"}},{"name":"python","displayName":"Python","description":"IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.","version":"2021.12.1559732655","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"languageServerVersion":"0.5.30","publisher":"ms-python","enableProposedApi":true,"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.61.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Formatters","Other","Data Science","Machine Learning","Notebooks"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.debugInTerminal","onCommand:python.sortImports","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewLanguageServerOutput","onCommand:python.viewOutput","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.reportIssue","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.configureTests","onCommand:python.switchOffInsidersChannel","onCommand:python.switchToDailyChannel","onCommand:python.switchToWeeklyChannel","onCommand:python.clearWorkspaceInterpreter","onCommand:python.enableSourceMapSupport","onCommand:python.launchTensorBoard","onCommand:python.clearPersistentStorage","onWalkthrough:pythonWelcome","onWalkthrough:pythonDataScienceWelcome","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get started with Python development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.installPythonWin","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python from the [Microsoft Store](https://aka.ms/AAd9rms).\n\n[Install Python](https://aka.ms/AAd9rms)\n","media":{"markdown":"resources/walkthrough/install-python-windows.md"},"when":"workspacePlatform == windows"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Open Terminal](command:workbench.action.terminal.new)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Open Terminal](command:workbench.action.terminal.new)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux","command":"workbench.action.terminal.new"},{"id":"python.selectInterpreter","title":"Select a Python Interpreter","description":"Choose which Python interpreter/environment you want to use for your Python project.\n[Select Python Interpreter](command:python.setInterpreter)\nTip: Reload the window if you installed Python but don't see it in the list (``Developer: Reload Window`` command in the [Command Palette](command:workbench.action.showCommands))","media":{"svg":"resources/walkthrough/python-interpreter.svg","altText":"Selecting a python interpreter from the status bar"},"when":""},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:welcome.showNewFileEntries) a Python file - make sure to save it as \".py\". \n Click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMore","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 💌 [Sign up](https://aka.ms/python-vscode-mailinglist) for tips and tutorials through our mailing list. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Learn More](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installPythonWinDS","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python from the [Microsoft Store](https://aka.ms/AAd9rms).\n\n[Install Python](https://aka.ms/AAd9rms)\n","media":{"markdown":"resources/walkthrough/install-python-windows.md"},"when":"workspacePlatform == windows"},{"id":"python.installPythonMacDS","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Open Terminal](command:workbench.action.terminal.new)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinuxDS","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Open Terminal](command:workbench.action.terminal.new)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux","command":"workbench.action.terminal.new"},{"id":"python.openFolderMac","title":"Open an existing Python project","description":"If you already have an existing Python project on your machine:\n[Open Folder](command:workbench.action.files.openFileFolder)\n \nIf you would like to clone a Python project from GitHub:\n[Clone a Git repository](command:git.clone)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a folder"},"completionEvents":["onCommand:workbench.action.files.openFileFolder"],"when":"workspacePlatform == mac && workspaceFolderCount == 0"},{"id":"python.openFolder","title":"Open an existing Python project","description":"To start, open a Python folder/project.\nIf you already have an existing Python project on your machine:\n[Open Folder](command:workbench.action.files.openFolder)\n \nIf you would like to clone a Python project from GitHub:\n[Clone a Git repository](command:git.clone)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a folder"},"completionEvents":["onCommand:workbench.action.files.openFolder"],"when":"workspacePlatform != mac && workspaceFolderCount == 0"},{"id":"python.createNewNotebook","title":"Create a new Jupyter Notebook","description":"To create a new Jupyter Notebook, you can right click in the file explorer and create a new file with an .ipynb extension anytime.\n \nAlternatively, you can open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:toSide:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 📃 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"}],"commands":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearPersistentStorage","title":"Clear Internal Extension Cache"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.enableLinting","title":"Enable/Disable Linting"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.goToPythonObject","title":"Go to Python Object"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Test","command":"python.refreshTests","icon":"$(refresh)","title":"Refresh Tests"},{"category":"Test","command":"python.refreshingTests","icon":{"dark":"resources/dark/discovering-tests.svg","light":"resources/light/discovering-tests.svg"},"title":"Refreshing Tests"},{"category":"Test","command":"python.stopRefreshingTests","icon":"$(beaker-stop)","title":"Stop Refreshing Tests"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.runLinting","title":"Run Linting"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.setLinter","title":"Select Linter"},{"category":"Python Refactor","command":"python.sortImports","title":"Sort Imports"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.switchOffInsidersChannel","title":"Switch to Default Channel"},{"category":"Python","command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel"},{"category":"Python","command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"}],"configuration":{"properties":{"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array"},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path. This default setting is used as a fallback if no interpreter is selected for the workspace. The extension will also not set nor change the value of this setting, it will only read from it.","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.disableInstallationCheck":{"default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"machine","type":"boolean"},"python.experiments.optInto":{"default":[],"description":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","items":{"enum":["All","pythonDeprecatePythonPath","pythonSurveyNotification","pythonTensorboardExperiment"]},"scope":"machine","type":"array"},"python.experiments.optOutFrom":{"default":[],"description":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","items":{"enum":["All","pythonDeprecatePythonPath","pythonSurveyNotification","pythonTensorboardExperiment"]},"scope":"machine","type":"array"},"python.formatting.autopep8Args":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.formatting.autopep8Path":{"default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.formatting.blackArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.formatting.blackPath":{"default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.formatting.provider":{"default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","none","yapf"],"scope":"resource","type":"string","tags":["experimental"]},"python.formatting.yapfArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.formatting.yapfPath":{"default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.insidersChannel":{"default":"off","description":"Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the python extension, which include upcoming features and bug fixes.","enum":["daily","off","weekly"],"scope":"machine","type":"string"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.linting.banditArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.banditEnabled":{"default":false,"description":"Whether to lint Python files using bandit.","scope":"resource","type":"boolean"},"python.linting.banditPath":{"default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.cwd":{"default":null,"description":"Optional working directory for linters.","scope":"resource","type":"string"},"python.linting.enabled":{"default":true,"description":"Whether to lint Python files.","scope":"resource","type":"boolean"},"python.linting.flake8Args":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.flake8CategorySeverity.E":{"default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.flake8CategorySeverity.F":{"default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.flake8CategorySeverity.W":{"default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.flake8Enabled":{"default":false,"description":"Whether to lint Python files using flake8","scope":"resource","type":"boolean"},"python.linting.flake8Path":{"default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.ignorePatterns":{"default":["**/site-packages/**/*.py",".vscode/*.py"],"description":"Patterns used to exclude files or folders from being linted.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.lintOnSave":{"default":true,"description":"Whether to lint Python files when saved.","scope":"resource","type":"boolean"},"python.linting.maxNumberOfProblems":{"default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource","type":"number"},"python.linting.mypyArgs":{"default":["--follow-imports=silent","--ignore-missing-imports","--show-column-numbers","--no-pretty"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.mypyCategorySeverity.error":{"default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.mypyCategorySeverity.note":{"default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.mypyEnabled":{"default":false,"description":"Whether to lint Python files using mypy.","scope":"resource","type":"boolean"},"python.linting.mypyPath":{"default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.prospectorArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.prospectorEnabled":{"default":false,"description":"Whether to lint Python files using prospector.","scope":"resource","type":"boolean"},"python.linting.prospectorPath":{"default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pycodestyleArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pycodestyleCategorySeverity.E":{"default":"Error","description":"Severity of pycodestyle message type 'E'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pycodestyleCategorySeverity.W":{"default":"Warning","description":"Severity of pycodestyle message type 'W'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pycodestyleEnabled":{"default":false,"description":"Whether to lint Python files using pycodestyle","scope":"resource","type":"boolean"},"python.linting.pycodestylePath":{"default":"pycodestyle","description":"Path to pycodestyle, you can use a custom version of pycodestyle by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pydocstyleArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pydocstyleEnabled":{"default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource","type":"boolean"},"python.linting.pydocstylePath":{"default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pylamaArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pylamaEnabled":{"default":false,"description":"Whether to lint Python files using pylama.","scope":"resource","type":"boolean"},"python.linting.pylamaPath":{"default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pylintArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pylintCategorySeverity.convention":{"default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.error":{"default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.fatal":{"default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.refactor":{"default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.warning":{"default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintEnabled":{"default":false,"description":"Whether to lint Python files using pylint.","scope":"resource","type":"boolean"},"python.linting.pylintPath":{"default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.logging.level":{"default":"error","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pythonPath":{"default":"python","description":"(DEPRECATED: Note this setting is not used when in pythonDeprecatePythonPath experiment) Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.sortImports.args":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.sortImports.path":{"default":"","description":"Path to isort script, default using inner version","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"application","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array"},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program","items":{"type":"string"},"type":"array"},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["*-constraints.txt","*-requirements.in","*-requirements.txt","constraints-*.txt","requirements-*.in","requirements-*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearPersistentStorage","title":"Clear Internal Extension Cache","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableLinting","title":"Enable/Disable Linting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.goToPythonObject","title":"Go to Python Object","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"python.refreshTests","icon":"$(refresh)","title":"Refresh Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"python.refreshingTests","icon":{"dark":"resources/dark/discovering-tests.svg","light":"resources/light/discovering-tests.svg"},"title":"Refreshing Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"python.stopRefreshingTests","icon":"$(beaker-stop)","title":"Stop Refreshing Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.runLinting","title":"Run Linting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setLinter","title":"Select Linter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python Refactor","command":"python.sortImports","title":"Sort Imports","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","when":"config.python.insidersChannel != 'default' && !virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","when":"config.python.insidersChannel != 'daily' && !virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","when":"config.python.insidersChannel != 'weekly' && !virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.sortImports","group":"Refactor","title":"Refactor: Sort Imports","when":"editorLangId == python && !notebookEditorFocused && !virtualWorkspace && shellExecutionSupported"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.debugInTerminal","group":"navigation@1","title":"Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"view/title":[{"command":"python.refreshTests","when":"view == workbench.view.testing && !refreshingTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@0"},{"command":"python.refreshingTests","when":"view == workbench.view.testing && refreshingTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@0"},{"command":"python.stopRefreshingTests","when":"view == workbench.view.testing && refreshingTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@0"},{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build","lint-fix":"eslint --fix --ext .ts,.js src build gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@vscode/jupyter-lsp-middleware":"^0.2.15","arch":"^2.1.0","chokidar":"^3.4.3","diff-match-patch":"^1.0.0","fs-extra":"^9.1.0","glob":"^7.1.2","hash.js":"^1.1.7","iconv-lite":"^0.4.21","inversify":"^5.0.4","jsonc-parser":"^2.0.3","lodash":"^4.17.21","md5":"^2.2.1","minimatch":"^3.0.4","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^5.5.0","sudo-prompt":"^8.2.0","tmp":"^0.0.29","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"0.4.2","vscode-jsonrpc":"6.0.0","vscode-languageclient":"7.0.0","vscode-languageserver":"7.0.0","vscode-languageserver-protocol":"3.16.0","vscode-tas-client":"^0.1.22","winreg":"^1.2.4","xml2js":"^0.4.19"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^0.1.3","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/diff-match-patch":"^1.0.32","@types/download":"^6.2.2","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^5.2.7","@types/nock":"^10.0.3","@types/node":"^12.19.12","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^7.5.1","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/vscode":"~1.53.0","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/test-electron":"^1.6.1","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^5.1.2","cross-spawn":"^6.0.5","del":"^3.0.0","download":"^7.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.22.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^0.7.5","flat":"^4.0.0","get-port":"^3.2.0","gulp":"^4.0.0","gulp-chmod":"^2.0.0","gulp-gunzip":"^1.1.0","gulp-rename":"^1.4.0","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","lolex":"^5.1.2","mocha":"^8.1.1","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","nock":"^10.0.6","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","rimraf":"^3.0.2","shortid":"^2.2.8","sinon":"^8.0.1","source-map-support":"^0.5.12","ts-loader":"^5.3.0","ts-mock-imports":"^1.3.0","ts-mockito":"^2.5.0","ts-node":"^8.3.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.1.5","typescript-formatter":"^7.1.0","uuid":"^3.3.2","vsce":"^1.96.1","vscode-debugadapter-testsupport":"^1.27.0","vscode-telemetry-extractor":"^1.9.5","webpack":"^4.33.0","webpack-bundle-analyzer":"^3.6.0","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^4.1.4","webpack-node-externals":"^1.7.2","webpack-require-from":"^1.8.0","yargs":"^15.3.1"},"extensionPack":["ms-toolsai.jupyter","ms-python.vscode-pylance"],"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","identifier":{"value":"ms-python.python","_lower":"ms-python.python"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-python.python-2021.12.1559732655","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-python.python-2021.12.1559732655","scheme":"file"}},{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2021.12.1","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.57.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available."},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"}]},"configurationDefaults":{"[python]":{"editor.wordBasedSuggestions":false}},"configuration":{"type":"object","title":"Pylance","properties":{"pylance.insidersChannel":{"type":"string","default":"off","description":"Pylance insiders download channel.","enum":["off","daily"],"enumDescriptions":["Do not check for insiders updates.","Automatically check for and install insiders updates daily."],"scope":"application","tags":["usesOnlineServices "]},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"description":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":true,"description":"Offer auto-import completions.","scope":"resource"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"description":"Automatically add common search paths like 'src'.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","description":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","description":"Analysis mode for diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional import search resolution paths","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"description":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","strict"],"description":"Defines the default rule set for type checking.","enumDescriptions":["Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.","All \"off\" rules + basic type checking rules.","All \"off\" rules + all type checking rules."],"scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","default":{},"description":"Allows a user to override the severity levels for individual diagnostics.","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":"string","description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"error","enum":["none","information","warning","error"]},"reportPropertyTypeMismatch":{"type":"string","description":"Diagnostics for property whose setter and getter have mismatched types.","default":"error","enum":["none","information","warning","error"]},"reportFunctionMemberAccess":{"type":"string","description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error"]},"reportMissingImports":{"type":"string","description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error"]},"reportMissingModuleSource":{"type":"string","description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error"]},"reportMissingTypeStubs":{"type":"string","description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"warning","enum":["none","information","warning","error"]},"reportImportCycles":{"type":"string","description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"warning","enum":["none","information","warning","error"]},"reportUnusedImport":{"type":"string","description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"information","enum":["none","information","warning","error"]},"reportUnusedClass":{"type":"string","description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"information","enum":["none","information","warning","error"]},"reportUnusedFunction":{"type":"string","description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"information","enum":["none","information","warning","error"]},"reportUnusedVariable":{"type":"string","description":"Diagnostics for a variable that is not accessed.","default":"information","enum":["none","information","warning","error"]},"reportDuplicateImport":{"type":"string","description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"warning","enum":["none","information","warning","error"]},"reportWildcardImportFromLibrary":{"type":"string","description":"Diagnostics for an wildcard import from an external library.","default":"warning","enum":["none","information","warning","error"]},"reportOptionalSubscript":{"type":"string","description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"warning","enum":["none","information","warning","error"]},"reportOptionalMemberAccess":{"type":"string","description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"warning","enum":["none","information","warning","error"]},"reportOptionalCall":{"type":"string","description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"warning","enum":["none","information","warning","error"]},"reportOptionalIterable":{"type":"string","description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"warning","enum":["none","information","warning","error"]},"reportOptionalContextManager":{"type":"string","description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"warning","enum":["none","information","warning","error"]},"reportOptionalOperand":{"type":"string","description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"warning","enum":["none","information","warning","error"]},"reportTypedDictNotRequiredAccess":{"type":"string","description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"error","enum":["none","information","warning","error"]},"reportUntypedFunctionDecorator":{"type":"string","description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"warning","enum":["none","information","warning","error"]},"reportUntypedClassDecorator":{"type":"string","description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"warning","enum":["none","information","warning","error"]},"reportUntypedBaseClass":{"type":"string","description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"warning","enum":["none","information","warning","error"]},"reportUntypedNamedTuple":{"type":"string","description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"warning","enum":["none","information","warning","error"]},"reportPrivateUsage":{"type":"string","description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"warning","enum":["none","information","warning","error"]},"reportPrivateImportUsage":{"type":"string","description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"error","enum":["none","information","warning","error"]},"reportConstantRedefinition":{"type":"string","description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"warning","enum":["none","information","warning","error"]},"reportIncompatibleMethodOverride":{"type":"string","description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"warning","enum":["none","information","warning","error"]},"reportIncompatibleVariableOverride":{"type":"string","description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"warning","enum":["none","information","warning","error"]},"reportOverlappingOverload":{"type":"string","description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error"]},"reportUninitializedInstanceVariable":{"type":"string","description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error"]},"reportInvalidStringEscapeSequence":{"type":"string","description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"warning","enum":["none","information","warning","error"]},"reportUnknownParameterType":{"type":"string","description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"warning","enum":["none","information","warning","error"]},"reportUnknownArgumentType":{"type":"string","description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"warning","enum":["none","information","warning","error"]},"reportUnknownLambdaType":{"type":"string","description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"warning","enum":["none","information","warning","error"]},"reportUnknownVariableType":{"type":"string","description":"Diagnostics for variables that have an unknown type..","default":"warning","enum":["none","information","warning","error"]},"reportUnknownMemberType":{"type":"string","description":"Diagnostics for class or instance variables that have an unknown type.","default":"warning","enum":["none","information","warning","error"]},"reportMissingParameterType":{"type":"string","description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error"]},"reportMissingTypeArgument":{"type":"string","description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error"]},"reportInvalidTypeVarUse":{"type":"string","description":"Diagnostics for improper use of type variables in a function signature.","default":"warning","enum":["none","information","warning","error"]},"reportCallInDefaultInitializer":{"type":"string","description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"information","enum":["none","information","warning","error"]},"reportUnnecessaryIsInstance":{"type":"string","description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true or always false. Such calls are often indicative of a programming error.","default":"information","enum":["none","information","warning","error"]},"reportUnnecessaryCast":{"type":"string","description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"information","enum":["none","information","warning","error"]},"reportUnnecessaryComparison":{"type":"string","description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error"]},"reportAssertAlwaysTrue":{"type":"string","description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"information","enum":["none","information","warning","error"]},"reportSelfClsParameterName":{"type":"string","description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"information","enum":["none","information","warning","error"]},"reportImplicitStringConcatenation":{"type":"string","description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"warning","enum":["none","information","warning","error"]},"reportInvalidStubStatement":{"type":"string","description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"warning","enum":["none","information","warning","error"]},"reportIncompleteStub":{"type":"string","description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error"]},"reportUndefinedVariable":{"type":"string","description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"warning","enum":["none","information","warning","error"]},"reportUnboundVariable":{"type":"string","description":"Diagnostics for unbound and possibly unbound variables.","default":"information","enum":["none","information","warning","error"]},"reportUnusedCallResult":{"type":"string","description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error"]},"reportUnusedCoroutine":{"type":"string","description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"error","enum":["none","information","warning","error"]},"reportUnsupportedDunderAll":{"type":"string","description":"Diagnostics for unsupported operations performed on __all__.","default":"warning","enum":["none","information","warning","error"]}}},"python.analysis.logLevel":{"type":"string","default":"Information","description":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"]},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && webpack --mode production --progress","webpack":"webpack --mode development --progress","webpack-dev":"npm run clean && webpack --mode development --watch --progress","build:tests":"tsc","test":"npm run build:tests && node ./src/tests/runTests.js"},"devDependencies":{"@types/copy-webpack-plugin":"^8.0.1","@types/jest":"^27.0.2","@types/node":"^12.20.36","@types/source-map-support":"^0.5.4","@types/terser-webpack-plugin":"^5.0.4","@types/vscode":"~1.57.0","@vscode/test-electron":"^1.6.2","copy-webpack-plugin":"^9.0.1","javascript-obfuscator":"3.0.0","jest":"^27.3.1","jest-cli":"^27.3.1","jest-environment-node":"^27.3.1","jest-junit":"^13.0.0","shx":"^0.3.3","source-map-support":"^0.5.20","ts-jest":"^27.0.7","ts-loader":"^9.2.6","ts-mockito":"^2.6.1","typescript":"~4.4.4","vsce":"~1.102.0","webpack":"^5.61.0","webpack-cli":"^4.9.1","webpack-obfuscator":"^3.5.0"},"dependencies":{"@azure/storage-blob":"^12.8.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","querystring-es3":"^0.2.1","semver":"^7.3.5","stream-browserify":"^3.0.0","vscode-languageserver-types":"3.16.0"},"uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.vscode-pylance","identifier":{"value":"ms-python.vscode-pylance","_lower":"ms-python.vscode-pylance"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-python.vscode-pylance-2021.12.1","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-python.vscode-pylance-2021.12.1","scheme":"file"}},{"name":"jupyter","displayName":"Jupyter","version":"2021.11.1001550889","description":"Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"extensionPack":["ms-toolsai.jupyter-keymap","ms-toolsai.jupyter-renderers"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-jupyter","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+jupyter","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"engines":{"vscode":"^1.63.0"},"keywords":["jupyter","notebook","ipynb","notebookKernelJupyterNotebook","multi-root ready","python"],"categories":["Programming Languages","Other","Extension Packs","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onCommand:jupyter.viewOutput","onCommand:jupyter.export","onCommand:jupyter.exportAsPythonScript","onCommand:jupyter.exportToHTML","onCommand:jupyter.exportToPDF","onCommand:jupyter.notebookeditor.export","onCommand:jupyter.createnewnotebook","onCommand:jupyter.createnewinteractive","onCommand:jupyter.importnotebook","onCommand:jupyter.importnotebookfile","onCommand:jupyter.selectjupyteruri","onCommand:jupyter.exportfileasnotebook","onCommand:jupyter.exportfileandoutputasnotebook","onCommand:jupyter.selectJupyterInterpreter","onCommand:jupyter.selectjupytercommandline","onCommand:jupyter.openVariableView","onCommand:jupyter.selectNativeJupyterUriFromToolBar","onCommand:jupyter.clearSavedJupyterUris","onCommand:jupyter.filterKernels","onNotebook:jupyter-notebook","onNotebook:interactive"],"main":"./out/client/extension","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Execution of cells in Interactive Window and Notebooks is not supported in untrusted workspaces."}},"contributes":{"keybindings":[{"command":"jupyter.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && jupyter.ownsSelection && !notebookEditorFocused"},{"command":"jupyter.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused && !jupyter.havenativecells"},{"command":"jupyter.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"key":"shift+enter","when":"resourceScheme == 'vscode-interactive'","command":"interactive.execute"},{"key":"escape","when":"resourceScheme == 'vscode-interactive' && !editorHoverVisible && !suggestWidgetVisible && !isComposing && !inSnippetMode && !exceptionWidgetVisible && !selectionAnchorSet && !LinkedEditingInputVisible && !renameInputVisible && !editorHasSelection && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !findWidgetVisible && !markersNavigationVisible && !parameterHintsVisible && !editorHasMultipleSelections && !notificationToastsVisible","command":"interactive.input.clear"},{"command":"jupyter.insertCellBelowPosition","key":"ctrl+; s","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","key":"ctrl+; b","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","key":"ctrl+; a","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","key":"ctrl+; x","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","key":"ctrl+alt+shift+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","key":"ctrl+alt+shift+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","key":"ctrl+; u","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","key":"ctrl+; d","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","key":"ctrl+; m","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","key":"ctrl+; c","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","key":"ctrl+alt+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","key":"ctrl+alt+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","key":"ctrl+alt+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","key":"ctrl+alt+shift+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.refreshDataViewer","key":"ctrl+r","mac":"cmd+r","when":"jupyter.dataViewerActive"},{"command":"jupyter.runAndDebugCell","key":"ctrl+alt+shift+enter","mac":"ctrl+shift+enter"},{"command":"jupyter.runByLine","key":"f10","when":"!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.runByLineNext","key":"f10","when":"jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.runByLineStop","key":"ctrl+enter","when":"jupyter.notebookeditor.runByLineInProgress"}],"commands":[{"command":"jupyter.debugNotebook","title":"Debug","icon":"$(bug)","category":"Jupyter","enablement":"notebookKernelCount > 0 && !jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.filterKernels","title":"Filter Kernels","category":"Jupyter"},{"command":"jupyter.runByLine","title":"Run by Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookKernelCount > 0 && !jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.runAndDebugCell","title":"Debug Cell","icon":"$(debug-alt-small)","category":"Jupyter"},{"command":"jupyter.runByLineNext","title":"Run Next Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.runByLineStop","title":"Continue Execution","icon":"$(debug-continue-small)","category":"Jupyter","enablement":"notebookKernelCount > 0 && jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.viewOutput","title":"Show Output","category":"Jupyter"},{"command":"jupyter.notebookeditor.export","title":"Export As","shortTitle":"Export","category":"Notebook","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.selectJupyterInterpreter","title":"Select Interpreter to start Jupyter server","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstepover","title":"Step Over","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstop","title":"Stop","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcontinue","title":"Continue","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.execSelectionInteractive","title":"Run Selection/Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove","title":"Run Above","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcellandallbelow","title":"Run Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runtoline","title":"Run To Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runfromline","title":"Run From Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.selectjupyteruri","title":"Specify local or remote Jupyter server for connections","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify local or remote Jupyter server for connections","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.selectjupytercommandline","title":"Specify Jupyter command line arguments","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.importnotebookfile","title":"Convert to Python Script","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.undocells","title":"Undo Last Interactive Action","category":"Notebook"},{"command":"jupyter.notebookeditor.redocells","title":"Redo Last Interactive Action","category":"Notebook"},{"command":"jupyter.interruptkernel","title":"Interrupt Kernel","shortTitle":"Interrupt","category":"Jupyter","icon":{"light":"resources/light/interrupt.svg","dark":"resources/dark/interrupt.svg"},"enablement":"isWorkspaceTrusted && jupyter.interactive.canInterruptNotebookKernel"},{"command":"jupyter.restartkernel","title":"Restart Kernel","shortTitle":"Restart","category":"Jupyter","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"isWorkspaceTrusted && jupyter.interactive.canRestartNotebookKernel"},{"command":"jupyter.notebookeditor.interruptkernel","title":"Interrupt Kernel","shortTitle":"Interrupt","category":"Notebook","icon":{"light":"resources/light/interrupt.svg","dark":"resources/dark/interrupt.svg"},"enablement":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.notebookeditor.canInterruptNotebookKernel"},{"command":"jupyter.notebookeditor.restartkernel","title":"Restart Kernel","shortTitle":"Restart","category":"Notebook","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"jupyter.notebookeditor.canrestartNotebookkernel && isWorkspaceTrusted"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify local or remote Jupyter server for connections","category":"Jupyter","icon":"$(debug-disconnect)","enablement":"isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook"},{"command":"jupyter.notebookeditor.expandallcells","title":"Expand All Notebook Cells","category":"Notebook"},{"command":"jupyter.notebookeditor.collapseallcells","title":"Collapse All Notebook Cells","category":"Notebook"},{"command":"jupyter.expandallcells","title":"Expand All Interactive Cells","shortTitle":"Expand","category":"Jupyter","icon":"$(expand-all)"},{"command":"jupyter.collapseallcells","title":"Collapse All Interactive Cells","shortTitle":"Collapse","category":"Jupyter","icon":"$(collapse-all)"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter"},{"command":"jupyter.createnewnotebook","title":"Create New Jupyter Notebook","shortTitle":"Jupyter Notebook","category":"Jupyter"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter"},{"command":"jupyter.latestExtension","title":"DataScience.latestExtension","category":"Jupyter"},{"command":"jupyter.createGitHubIssue","title":"Create GitHub Issue","enablement":"config.noExists","category":"Jupyter"},{"command":"jupyter.submitGitHubIssue","title":"Submit GitHub Issue","enablement":"config.noExists","category":"Jupyter"},{"command":"jupyter.enableDebugLogging","title":"Enable Debug Logging","category":"Jupyter"},{"command":"jupyter.resetLoggingLevel","title":"Reset Logging Level","category":"Jupyter"},{"command":"jupyter.showDataViewer","title":"View Value in Data Viewer","category":"Jupyter"},{"command":"jupyter.clearSavedJupyterUris","title":"Clear Jupyter remote server list","category":"Jupyter"},{"command":"jupyter.openVariableView","title":"Open Variable View","shortTitle":"Variables","icon":"$(variable-group)","category":"Jupyter","enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted || notebookType == interactive && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","shortTitle":"Outline","icon":"$(list-unordered)","category":"Jupyter","enablement":"notebookType == jupyter-notebook"},{"command":"jupyter.refreshDataViewer","title":"Refresh Data Viewer","category":"Jupyter","enablement":"jupyter.dataViewerActive && isWorkspaceTrusted"},{"command":"jupyter.interactive.clearAllCells","title":"Clear All","icon":"$(close)","category":"Jupyter"},{"command":"jupyter.interactive.removeCell","title":"Remove Cell","icon":"$(close)","category":"Jupyter"},{"command":"jupyter.interactive.goToCode","title":"Go to code","icon":"$(go-to-file)","category":"Jupyter"},{"command":"jupyter.interactive.exportasnotebook","title":"Export to Jupyter Notebook","shortTitle":"Save","icon":"$(save-as)","enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.exportas","title":"Export","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.copyCell","title":"Copy Cell","icon":"$(copy)","category":"Jupyter"}],"menus":{"editor/context":[{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runallcells","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcell","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcelladvance","group":"Jupyter2"},{"command":"jupyter.runFileInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runfromline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runtoline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.execSelectionInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"when":"editorFocus && editorLangId == python && resourceLangId == jupyter && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.importnotebook","group":"Jupyter3@1"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileasnotebook","group":"Jupyter3@2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileandoutputasnotebook","group":"Jupyter3@3"}],"editor/title":[{"command":"jupyter.notebookeditor.restartkernel","title":"Restart Kernel","group":"navigation@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.notebookeditor.canrestartNotebookkernel && config.notebook.globalToolbar != true && jupyter.kernel.isjupyter"},{"command":"jupyter.notebookeditor.interruptkernel","title":"Interrupt Kernel","group":"overflow@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.notebookeditor.canInterruptNotebookKernel && config.notebook.globalToolbar != true && jupyter.kernel.isjupyter"},{"command":"jupyter.openVariableView","title":"Open Variable View","group":"navigation@2","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true && jupyter.ispythonnotebook && jupyter.kernel.isjupyter"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","group":"navigation@3","when":"notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar && config.notebook.globalToolbar != true && jupyter.kernel.isjupyter"},{"command":"jupyter.notebookeditor.export","title":"Export As","group":"navigation@4","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true && jupyter.ispythonnotebook"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify local or remote Jupyter server for connections","group":"overflow@1000","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true"}],"notebook/toolbar":[{"command":"jupyter.notebookeditor.restartkernel","group":"navigation/execute@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.kernel.isjupyter"},{"command":"jupyter.notebookeditor.interruptkernel","group":"navigation/execute@2","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.kernel.isjupyter"},{"command":"jupyter.openVariableView","group":"navigation@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.ispythonnotebook && jupyter.kernel.isjupyter"},{"command":"jupyter.openOutlineView","group":"navigation@2","when":"notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar"},{"command":"jupyter.notebookeditor.export","group":"Jupyter","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.ispythonnotebook"}],"notebook/cell/title":[{"command":"jupyter.runByLine","when":"notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && !jupyter.notebookeditor.runByLineInProgress","group":"inline/cell@0"},{"command":"jupyter.runByLineNext","when":"notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && jupyter.notebookeditor.runByLineInProgress","group":"inline/cell@0"},{"command":"jupyter.runByLineStop","when":"notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && jupyter.notebookeditor.runByLineInProgress && notebookCellToolbarLocation == left","group":"inline/cell@1"},{"command":"jupyter.runByLineStop","when":"notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && jupyter.notebookeditor.runByLineInProgress && notebookCellToolbarLocation == right","group":"inline/cell@0"}],"notebook/cell/execute":[{"command":"jupyter.runAndDebugCell","when":"notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && !jupyter.notebookeditor.runByLineInProgress"}],"interactive/toolbar":[{"command":"jupyter.interactive.clearAllCells","group":"navigation@0","when":"isWorkspaceTrusted"},{"command":"jupyter.restartkernel","group":"navigation@1","when":"isWorkspaceTrusted"},{"command":"jupyter.interruptkernel","group":"navigation@2","when":"isWorkspaceTrusted"},{"command":"jupyter.openVariableView","group":"navigation@3","when":"isWorkspaceTrusted"},{"command":"jupyter.interactive.exportasnotebook","group":"navigation@4","when":"isWorkspaceTrusted"},{"command":"jupyter.interactive.exportas","group":"navigation@5","when":"isWorkspaceTrusted"},{"command":"jupyter.expandallcells","group":"navigation@6","when":"isWorkspaceTrusted"},{"command":"jupyter.collapseallcells","group":"navigation@7","when":"isWorkspaceTrusted"}],"interactive/cell/title":[{"command":"jupyter.interactive.copyCell","group":"inline@0","when":"isWorkspaceTrusted"},{"command":"jupyter.interactive.goToCode","group":"inline@1","when":"isWorkspaceTrusted"},{"command":"jupyter.interactive.removeCell","group":"inline@2","when":"isWorkspaceTrusted"}],"explorer/context":[{"when":"resourceLangId == python && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runFileInteractive","group":"Jupyter2"},{"when":"resourceLangId == jupyter && isWorkspaceTrusted","command":"jupyter.importnotebookfile","group":"Jupyter"}],"file/newFile":[{"command":"jupyter.createnewnotebook"}],"commandPalette":[{"command":"jupyter.debugNotebook","title":"Debug","when":"false"},{"command":"jupyter.runByLine","title":"Run by Line","when":"!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.runByLineNext","title":"Run Next Line","when":"jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.runByLineStop","title":"Continue Execution","when":"jupyter.notebookeditor.runByLineInProgress"},{"command":"jupyter.interactive.copyCell","when":"false"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted && jupyter.ispythonnotebook && isWorkspaceTrusted"},{"command":"jupyter.refreshDataViewer","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","when":"editorLangId == python && jupyter.hascodecells && isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && isWorkspaceTrusted"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","when":"false"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.interruptkernel","title":"Interrupt Kernel","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && isWorkspaceTrusted"},{"command":"jupyter.restartkernel","title":"Restart Kernel","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.undocells","title":"Undo Last Interactive Action","category":"Notebook","when":"jupyter.haveinteractivecells && jupyter.isnativeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.redocells","title":"Redo Last Interactive Action","category":"Notebook","when":"jupyter.havenativeredoablecells && jupyter.isnativeactive && !notebookEditorFocused&& isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","when":"jupyter.havenativecells && jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.interruptkernel","title":"Interrupt Kernel","category":"Notebook","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.restartkernel","title":"Restart Kernel","category":"Notebook","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.expandallcells","title":"Expand All Interactive Cells","category":"Notebook","when":"notebookEditorFocused && notebookType == 'jupyter-notebook'"},{"command":"jupyter.notebookeditor.collapseallcells","title":"Collapse All Interactive Cells","category":"Notebook","when":"notebookEditorFocused && notebookType == 'jupyter-notebook'"},{"command":"jupyter.expandallcells","title":"Expand All Interactive Cells","shortTitle":"Expand","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.collapseallcells","title":"Collapse All Interactive Cells","shortTitle":"Collapse","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.runcellandallbelow","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runallcellsabove","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcontinue","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstop","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstepover","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive"},{"command":"jupyter.createnewnotebook","title":"Create New Jupyter Notebook","category":"Jupyter"},{"command":"jupyter.runtoline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.selectjupytercommandline","category":"Jupyter","when":"!jupyter.zmqavailable"},{"command":"jupyter.runfromline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.execSelectionInteractive","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.latestExtension","title":"Download the latest version of the Jupyter Extension","category":"Jupyter","when":"false"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","when":"false"},{"command":"jupyter.notebookeditor.export","title":"Export As","category":"Notebook","when":"false"},{"command":"jupyter.resetLoggingLevel","title":"Reset Logging Level","category":"Jupyter","when":"config.jupyter.logging.level != error"},{"command":"jupyter.enableDebugLogging","title":"Enable Debug Logging","category":"Jupyter","when":"config.jupyter.logging.level != debug"},{"command":"jupyter.createGitHubIssue","category":"Jupyter","when":"config.jupyter.logging.level == debug && config.noExists"},{"command":"jupyter.submitGitHubIssue","category":"Jupyter","when":"false"},{"command":"jupyter.showDataViewer","category":"Jupyter","when":"false"},{"command":"jupyter.openVariableView","title":"Open Variable View","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify local or remote Jupyter server for connections","when":"false"},{"command":"jupyter.interactive.goToCode","when":"false"},{"command":"jupyter.interactive.removeCell","when":"activeEditor == 'workbench.editor.interactive' && isWorkspaceTrusted"},{"command":"jupyter.interactive.clearAllCells","when":"activeEditor == 'workbench.editor.interactive' && isWorkspaceTrusted"}],"debug/variables/context":[{"command":"jupyter.showDataViewer","group":"1_view","when":"debugProtocolVariableMenuContext == 'viewableInDataViewer'"}]},"configuration":{"type":"object","title":"Jupyter","properties":{"jupyter.experiments.enabled":{"type":"boolean","default":true,"description":"Enables/disables A/B tests.","scope":"machine"},"jupyter.showVariableViewWhenDebugging":{"type":"boolean","default":true,"description":"Bring up the Variable View when starting a Run by Line session.","scope":"application"},"jupyter.logging.level":{"type":"string","default":"debug","enum":["off","error","warn","info","debug","verbose"],"description":"The logging level the extension logs at.","scope":"machine"},"jupyter.experiments.optInto":{"type":"array","default":[],"items":{"enum":[]},"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.experiments.optOutFrom":{"type":"array","default":[],"items":{"enum":[]},"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.enableKeyboardShortcuts":{"type":"boolean","default":true,"deprecationMessage":"This setting has been deprecated as Jupyter keyboard shortcuts have been moved into the ms-toolsai.jupyter-keymap extension. If you would like to disable Jupyter keyboard shortcuts, please uninstall or disable that extension instead.","description":"Enables Jupyter style keyboard shortcuts for Notebooks.","scope":"application"},"jupyter.allowImportFromNotebook":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"jupyter.widgetScriptSources":{"type":"array","default":[],"items":{"type":"string","enum":["jsdelivr.com","unpkg.com"],"enumDescriptions":["Loads widget (javascript) scripts from https://www.jsdelivr.com/","Loads widget (javascript) scripts from https://unpkg.com/"]},"uniqueItems":true,"markdownDescription":"Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.","scope":"machine"},"jupyter.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"jupyter.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel.","scope":"application"},"jupyter.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"jupyter.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"jupyter.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook","scope":"resource"},"jupyter.jupyterServerType":{"type":"string","enum":["local","remote"],"description":"Determines the type of connection for talking to jupyter. Local will start kernels locally. Remote allows for connections to remote servers","scope":"resource"},"jupyter.jupyterCommandLineArguments":{"type":"array","default":[],"description":"When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Jupyter Extension.","scope":"resource"},"jupyter.notebookFileRoot":{"type":"string","default":"${fileDirname}","description":"Set the root directory for running notebooks and the Interactive window.","scope":"resource"},"jupyter.searchForJupyter":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Search all installed Python interpreters for a Jupyter installation when starting the Interactive window","scope":"resource"},"jupyter.changeDirOnImportExport":{"type":"boolean","default":false,"description":"When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.","scope":"resource"},"jupyter.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Interactive window","scope":"resource"},"jupyter.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"jupyter.allowInput":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Allow the inputting of python code directly into the Interactive window"},"jupyter.showCellInputCode":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Show cell input code.","scope":"resource"},"jupyter.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","scope":"resource"},"jupyter.maxOutputSize":{"type":"number","default":400,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.","scope":"resource"},"jupyter.alwaysScrollOnNewCell":{"type":"boolean","default":false,"description":"Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.","scope":"resource"},"jupyter.enableScrollingForCellOutputs":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Interactive Window.","scope":"resource"},"jupyter.sendSelectionToInteractiveWindow":{"type":"boolean","default":false,"description":"When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.","scope":"resource"},"jupyter.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method;ABCMeta;type","description":"Types to exclude from showing in the Interactive variable explorer","scope":"resource"},"jupyter.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell.","scope":"resource"},"jupyter.defaultCellMarker":{"type":"string","default":"# %%","description":"Cell marker used for delineating a cell in a python file.","scope":"resource"},"jupyter.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.","scope":"resource"},"jupyter.allowLiveShare":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated as Live Share support for the interactive window no longer exists in the Jupyter extension.","description":"Allow the Interactive window to be shared during a Live Share session","scope":"resource"},"jupyter.ignoreVscodeTheme":{"type":"boolean","default":false,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.","scope":"resource"},"jupyter.themeMatplotlibPlots":{"type":"boolean","default":false,"description":"In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.","scope":"resource"},"jupyter.liveShareConnectionTimeout":{"type":"number","default":1000,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Amount of time to wait for guest connections to verify they have the Python extension installed.","scope":"application"},"jupyter.decorateCells":{"type":"boolean","default":true,"description":"Draw a highlight behind the currently active cell.","scope":"resource"},"jupyter.enableCellCodeLens":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"jupyter.enableAutoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"jupyter.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.","scope":"resource"},"jupyter.generateSVGPlots":{"type":"boolean","default":false,"description":"Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.","scope":"resource"},"jupyter.codeLenses":{"type":"string","default":"jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell","description":"Set of commands to put as code lens above a cell.","scope":"resource"},"jupyter.debugCodeLenses":{"type":"string","default":"jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"jupyter.debugpyDistPath":{"type":"string","default":"","description":"Path to debugpy bits for debugging cells.","scope":"resource"},"jupyter.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"jupyter.remoteDebuggerPort":{"type":"number","default":-1,"description":"When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.","scope":"resource"},"jupyter.disableJupyterAutoStart":{"type":"boolean","default":false,"description":"When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.","scope":"resource"},"jupyter.textOutputLimit":{"type":"number","default":20000,"deprecationMessage":"This setting is deprecated in favor of `notebook.output.textLineLimit`. This setting will be removed in an upcoming release.","description":"Limit the amount of text in Interactive cell text output to this value. 0 to allow any amount of characters.","scope":"resource"},"jupyter.colorizeInputBox":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in an upcoming release.","description":"Whether or not to use the theme's peek color as the background for the input box.","scope":"resource"},"jupyter.stopOnError":{"type":"boolean","default":true,"description":"Stop running cells if a cell throws an exception.","scope":"resource"},"jupyter.addGotoCodeLenses":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"jupyter.variableQueries":{"type":"array","markdownDescription":"Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example:\n```\n[\n  {\n    \"language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr\": \"'(\\\\w+)'\"\n  }\n]\n```","scope":"machine","examples":[[{"language":"python","query":"_rwho_ls = %who_ls\\nprint(_rwho_ls)","parseExpr":"'(\\w+)'"},{"language":"julia","query":"whos","parseExpr":"'(\\w+)'"}]]},"jupyter.kernels.filter":{"type":"array","items":{"type":"object","properties":{"type":{"enum":["jupyterKernelspec","pythonEnvironment"]},"path":{"type":"string","markdownDescription":"Fully qualified path to the kernel spec or the python enviornment. \nE.g. `~/miniconda3/envs/sample/bin/python`."},"required":["type","path"]}},"markdownDescription":"List of Jupyter Kernels and/or python environments that are to be excluded from the Kernel picker.","scope":"machine-overridable","examples":[[{"type":"jupyterKernelspec","path":"/usr/share/jupyter/kernels/sample/kernelspec.json"},{"type":"jupyterKernelspec","path":"~/miniconda3/envs/sample/scripts/python.exe"}]]},"jupyter.interactiveWindowMode":{"type":"string","enum":["perFile","single","multiple"],"scope":"resource","description":"Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.","default":"multiple"},"jupyter.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.","scope":"resource"},"jupyter.pythonExportMethod":{"type":"string","enum":["direct","commentMagics","nbconvert"],"default":"direct","description":"The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.","scope":"application"},"jupyter.runStartupCommands":{"type":"array","default":"","description":"A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.","scope":"application"},"jupyter.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, debug just my code.","scope":"resource"},"jupyter.showOutlineButtonInNotebookToolbar":{"type":"boolean","default":true,"description":"Show the Outline button in the Jupyter notebook toolbar.","scope":"resource"},"jupyter.newCellOnRunLast":{"type":"boolean","default":true,"description":"Append a new empty cell to an interactive window file on running the currently last cell.","scope":"resource"},"jupyter.pylanceHandlesNotebooks":{"type":"boolean","default":false,"description":"Determines if pylance's experimental notebook support is used or not","scope":"machine"},"jupyter.pythonCompletionTriggerCharacters":{"type":"string","default":".%","description":"Characters which trigger auto completion on a python jupyter kernel (requires reload of VS code)","scope":"machine"}}},"languages":[{"id":"raw"},{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"]}],"notebookRenderer":[{"id":"jupyter-ipywidget-renderer","entrypoint":"./out/datascience-ui/ipywidgetsRenderer/ipywidgetsRenderer.js","displayName":"Jupyter IPyWidget Renderer","mimeTypes":["application/vnd.jupyter.widget-view+json"]},{"id":"jupyter-error-renderer","entrypoint":"./out/datascience-ui/errorRenderer/errorRenderer.js","displayName":"Jupyter Error Renderer","requiresMessaging":"always","mimeTypes":["application/vnd.code.notebook.error"]}],"viewsContainers":{"panel":[{"id":"jupyter-variables","title":"Jupyter","icon":"$(notebook)"}]},"views":{"jupyter-variables":[{"type":"webview","id":"jupyterViewVariables","name":"Variables","when":"jupyter.hasNativeNotebookOrInteractiveWindowOpen"}]},"debuggers":[{"type":"Python Kernel Debug Adapter","label":"Python Kernel Debug Adapter"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-toolsai-jupyter-insiders.vsix","compile":"tsc -watch -p ./","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","compile-webviews-watch":"gulp compile-ipywidgets && cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./build/webpack/webpack.datascience-ui.config.js --watch","compile-webviews-watchd":"deemon npm run compile-webviews-watch","kill-compile-webviews-watchd":"deemon --kill npm run compile-webviews-watch","build-ipywidgets":"npm run build-ipywidgets-clean && npm run build-ipywidgets-compile && npm run build-ipywidgets-webpack","build-ipywidgets-clean":"node ./src/ipywidgets/scripts/clean.js","build-ipywidgets-compile":"tsc -p ./src/ipywidgets && rimraf ./out/tsconfig.tsbuildinfo && node ./src/ipywidgets/scripts/copyfiles.js","build-ipywidgets-webpack":"cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./src/ipywidgets/webpack.config.js","checkDependencies":"gulp checkDependencies","postinstall":"node ./build/ci/postInstall.js && cd src/ipywidgets && npm install","installPythonLibs":"gulp installPythonLibs","test:unittests":"mocha --config ./build/.mocha.unittests.js.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:parallel":"cross-env VSC_JUPYTER_CI_TEST_PARALLEL=1 node ./build/ci/scripts/runFunctionalTests.js","test:cover:report":"nyc report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_JUPYTER_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","pretestVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=vscode.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js","pretestNativeNotebooksInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true TEST_FILES_SUFFIX=vscode.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js","pretestNativeNotebooksWithoutPythonInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksWithoutPythonInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true TEST_FILES_SUFFIX=vscode.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true VSC_JUPYTER_CI_TEST_GREP=non-python-kernel VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true node ./out/test/testBootstrap.js ./out/test/standardTest.js","testNativeNotebooksAndWebviews":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true TEST_FILES_SUFFIX=vscode.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_CI_TEST_GREP=webview-test VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"node ./out/test/testBootstrap.js ./out/test/smokeTest.js","testSmokeLogged":"cross-env VSC_JUPYTER_FORCE_LOGGING=true VSC_JUPYTER_LOG_FILE=smoke-test.log node --no-force-async-hooks-checks ./out/test/testBootstrap.js ./out/test/smokeTest.js","lint":"eslint -c .eslintrc.js --ext .ts src","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","clean":"gulp clean","updateBuildNumber":"gulp updateBuildNumber","webpack":"webpack","download-api":"vscode-dts dev","postdownload-api":"vscode-dts main","generateTelemetry":"gulp generateTelemetryMd"},"dependencies":{"@enonic/fnv-plus":"^1.3.0","@fluentui/react":"^7.160.1","@jupyter-widgets/base":"^4.0.0","@jupyter-widgets/schema":"^0.4.0","@jupyterlab/coreutils":"^5.1.17","@jupyterlab/nbformat":"^3.1.17","@jupyterlab/services":"^6.1.17","@lumino/widgets":"^1.28.0","@nteract/messaging":"^7.0.0","@vscode/jupyter-lsp-middleware":"^0.2.28","ansi-to-html":"^0.6.7","arch":"^2.1.0","bootstrap":"^4.3.1","bootstrap-less":"^3.3.8","crypto":"^1.0.1","diff-match-patch":"^1.0.0","download":"^8.0.0","encoding":"^0.1.13","fast-deep-equal":"^2.0.1","font-awesome":"^4.7.0","fs-extra":"^4.0.3","get-port":"^3.2.0","glob":"^7.1.2","hash.js":"^1.1.7","iconv-lite":"^0.4.21","image-size":"^1.0.0","inversify":"^5.0.1","is-online":"^9.0.0","jquery":"^3.6.0","jsonc-parser":"^2.0.3","lodash":"^4.17.21","log4js":"^6.1.2","md5":"^2.2.1","named-js-regexp":"^1.3.3","node-fetch":"^2.6.1","node-stream-zip":"^1.6.0","pdfkit":"^0.12.1","portfinder":"^1.0.25","re-resizable":"~6.5.5","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dom":"^16.5.2","react-draggable":"^4.4.2","react-redux":"^7.1.1","react-svg-pan-zoom":"^3.1.0","react-svgmt":"^1.1.8","react-virtualized":"^9.21.1","redux":"^4.0.4","redux-logger":"^3.0.6","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","requirejs":"^2.3.6","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","sanitize-filename":"^1.6.3","semver":"^5.5.0","slickgrid":"^2.4.17","stack-trace":"0.0.10","string-argv":"^0.3.1","strip-ansi":"^5.2.0","styled-components":"^5.2.1","svg-inline-react":"^3.1.0","svg-to-pdfkit":"^0.1.8","tcp-port-used":"^1.0.1","tmp":"^0.0.29","uint64be":"^1.0.1","underscore":"^1.12.1","unicode":"^10.0.0","untildify":"^3.0.2","url-parse":"^1.5.3","uuid":"^3.3.2","vscode-debugprotocol":"^1.41.0","vscode-extension-telemetry":"0.1.4","vscode-jsonrpc":"6.0.0","vscode-languageclient":"7.0.0","vscode-languageserver":"7.0.0","vscode-languageserver-protocol":"3.16.0","vscode-tas-client":"^0.1.17","winston":"^3.2.1","ws":"^6.2.2","zeromq":"^6.0.0-beta.6"},"devDependencies":{"@actions/core":"^1.2.6","@actions/github":"^4.0.0","@babel/cli":"^7.15.4","@babel/core":"^7.4.4","@babel/plugin-transform-runtime":"^7.4.4","@babel/polyfill":"^7.4.4","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.9.0","@istanbuljs/nyc-config-typescript":"^0.1.3","@octokit/core":"^3.2.4","@octokit/plugin-paginate-rest":"^2.7.0","@octokit/webhooks":"^7.21.0","@purtuga/esm-webpack-plugin":"^1.5.0","@sinonjs/fake-timers":"^6.0.1","@testing-library/react":"^9.4.0","@types/ansi-regex":"^4.0.0","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^6.0.0","@types/cors":"^2.8.6","@types/debug":"^4.1.5","@types/dedent":"^0.7.0","@types/del":"^4.0.0","@types/diff-match-patch":"^1.0.32","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/jsdom":"^16.2.13","@types/loadable__component":"^5.10.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/memoize-one":"^4.1.1","@types/mocha":"^5.2.7","@types/nock":"^10.0.3","@types/node":"^14.17.4","@types/node-fetch":"^2.5.7","@types/pdfkit":"^0.11.0","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-redux":"^7.1.5","@types/react-virtualized":"^9.21.2","@types/redux-logger":"^3.0.7","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^7.5.1","@types/sinonjs__fake-timers":"^6.0.1","@types/socket.io":"^2.1.4","@types/stack-trace":"0.0.29","@types/tcp-port-used":"^1.0.0","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/vscode-notebook-renderer":"^1.60.0","@types/webpack-bundle-analyzer":"^2.13.0","@types/ws":"^6.0.1","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.10.1","@typescript-eslint/eslint-plugin-tslint":"^4.13.0","@typescript-eslint/parser":"^3.10.1","@vscode/test-electron":"^1.6.1","acorn":"^6.4.1","babel-polyfill":"^6.26.0","cache-loader":"^4.1.0","chai":"^4.3.0","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","chai-exclude":"^2.0.2","codecov":"^3.7.1","colors":"^1.2.1","copy-webpack-plugin":"^6.2.1","cors":"^2.8.5","cross-env":"^6.0.3","cross-spawn":"^6.0.5","css-loader":"^1.0.1","dedent":"^0.7.0","deemon":"^1.4.0","del":"^3.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","eslint":"^7.17.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^6.15.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jsdoc":"^31.0.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-null":"^1.0.2","eslint-plugin-prefer-arrow":"^1.2.2","eslint-plugin-prettier":"^3.1.2","eslint-plugin-react":"^7.22.0","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^0.7.5","express":"^4.17.1","fast-xml-parser":"^3.16.0","file-loader":"^5.1.0","flat":"^4.0.0","fork-ts-checker-webpack-plugin":"^5.2.0","gulp":"^4.0.0","gulp-azure-storage":"^0.11.1","gulp-filter":"^5.1.0","gulp-rename":"^1.4.0","gulp-typescript":"^4.0.1","html-webpack-plugin":"^3.2.0","jsdom":"^15.0.0","less":"^3.9.0","less-loader":"^5.0.0","less-plugin-inline-urls":"^1.2.0","lolex":"^5.1.2","mocha":"^8.1.1","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","nocache":"^2.1.0","nock":"^10.0.6","node-gyp-build":"^4.2.3","node-has-native-dependencies":"^1.0.2","node-html-parser":"^1.1.13","nyc":"^15.0.0","postcss":"^7.0.36","postcss-cssnext":"^3.1.0","postcss-import":"^12.0.1","postcss-loader":"^3.0.0","prettier":"^2.0.2","range-inclusive":"^1.0.2","relative":"^3.0.2","remove-files-webpack-plugin":"^1.4.0","rewiremock":"^3.13.0","rimraf":"^3.0.2","sinon":"^8.0.1","socket.io":"^2.4.1","source-map-support":"^0.5.12","style-loader":"^0.23.1","svg-inline-loader":"^0.8.0","thread-loader":"^2.1.3","transform-loader":"^0.2.4","trim":"^0.0.3","ts-loader":"^5.3.0","ts-mock-imports":"^1.3.0","ts-mockito":"^2.5.0","ts-node":"^8.3.0","tsconfig-paths-webpack-plugin":"^3.2.0","tslib":"^2.3.0","tslint":"^6.1.3","tslint-config-prettier":"^1.18.0","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","tslint-plugin-prettier":"^2.1.0","typemoq":"^2.1.0","typescript":"^4.4.3","typescript-formatter":"^7.1.0","unicode-properties":"^1.3.1","url-loader":"^1.1.2","vsce":"^1.99.0","vscode-dts":"^0.3.1","webpack":"^4.37.0","webpack-bundle-analyzer":"^3.6.0","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","why-is-node-running":"^2.0.3","yargs":"^15.4.1","yargs-parser":"^13.1.2"},"optionalDependencies":{"canvas":"^2.7.0"},"uuid":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-toolsai.jupyter","identifier":{"value":"ms-toolsai.jupyter","_lower":"ms-toolsai.jupyter"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-toolsai.jupyter-2021.11.1001550889","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-toolsai.jupyter-2021.11.1001550889","scheme":"file"}},{"name":"jupyter-keymap","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"displayName":"Jupyter Keymap","description":"Jupyter keymaps for notebooks","version":"1.0.0","engines":{"vscode":"^1.60.0-insider"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-keymap"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter-keymap/issues"},"categories":["Notebooks"],"keywords":["notebook-keymap"],"contributes":{"keybindings":[{"key":"F","when":"notebookEditorFocused && !inputFocus","command":"notebook.find"},{"key":"K","when":"notebookEditorFocused && !inputFocus","command":"list.focusUp"},{"key":"J","when":"notebookEditorFocused && !inputFocus","command":"list.focusDown"},{"key":"A","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.insertCodeCellAboveAndFocusContainer"},{"key":"B","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.insertCodeCellBelowAndFocusContainer"},{"key":"D D","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.delete"},{"key":"Z","when":"notebookEditorFocused && !inputFocus","command":"undo"},{"key":"S","when":"notebookEditorFocused && !inputFocus","command":"workbench.action.files.save"},{"key":"C","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.copy"},{"key":"X","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.cut"},{"key":"V","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.paste"},{"key":"shift+L","when":"notebookEditorFocused && !inputFocus","command":"notebook.toggleLineNumbers"},{"key":"O","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.toggleOutputs"},{"key":"L","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.toggleLineNumbers"},{"key":"ctrl+shift+-","when":"editorTextFocus && inputFocus && notebookEditorFocused","command":"notebook.cell.split"},{"key":"ctrl+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused || notebookCellListFocused","command":"notebook.cell.executeAndFocusContainer"},{"key":"shift+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused || notebookCellListFocused && notebookCellType == 'code'","command":"notebook.cell.executeAndSelectBelow"}]},"uuid":"9f6dc8db-620c-4844-b8c5-e74914f1be27","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-toolsai.jupyter-keymap","identifier":{"value":"ms-toolsai.jupyter-keymap","_lower":"ms-toolsai.jupyter-keymap"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-toolsai.jupyter-keymap-1.0.0","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-toolsai.jupyter-keymap-1.0.0","scheme":"file"}},{"name":"jupyter-renderers","displayName":"Jupyter Notebook Renderers","description":"Renderers for Jupyter Notebooks (with plotly, vega, latex, gif, png, svg, jpeg and other such outputs)","version":"1.0.4","engines":{"vscode":"^1.61.0"},"publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-notebook-renderers","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-notebook-renderers"},"bugs":{"url":"https://github.com/Microsoft/vscode-notebook-renderers/issues"},"preview":true,"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+jupyter","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"keywords":["jupyter","notebook","notebookRenderer","multi-root ready"],"categories":["Other","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":["onNotebook:*"],"main":"./out/extension_renderer/index.js","browser":"./out/extension_renderer/index.js","contributes":{"notebookRenderer":[{"id":"jupyter-notebook-renderer","entrypoint":"./out/client_renderer/renderers.js","displayName":"Jupyter Notebook Renderer","requiresMessaging":"optional","mimeTypes":["image/gif","image/png","image/jpeg","image/svg+xml","application/geo+json","application/vdom.v1+json","application/vnd.dataresource+json","application/vnd.plotly.v1+json","application/vnd.vega.v2+json","application/vnd.vega.v3+json","application/vnd.vega.v4+json","application/vnd.vega.v5+json","application/vnd.vegalite.v1+json","application/vnd.vegalite.v2+json","application/vnd.vegalite.v3+json","application/vnd.vegalite.v4+json","application/x-nteract-model-debug+json","text/latex","text/vnd.plotly.v1+html"]}]},"scripts":{"vscode:prepublish":"gulp checkDependencies && npm run compile:webpack","dev":"concurrently -r npm:compile:extension:watch npm:compile:client:watch npm:compile:test:watch","compile":"npm run compile:extension && npm run compile:test && npm run compile:client","compile:extension":"tsc -p src/extension","compile:extension:watch":"tsc -p src/extension --watch","compile:test":"tsc -p src/test","compile:test:watch":"tsc -p src/test --watch","compile:webpack":"npm run build:client && npm run build:extension","compile:client":"webpack --config=build/webpack/webpack.client.config.js","build:client":"webpack --config=build/webpack/webpack.client.config.js --mode=production","build:extension":"webpack --config=build/webpack/webpack.extension.config.js --mode=production","compile:client:watch":"webpack --config=build/webpack/webpack.client.config.js --watch","lint":"eslint src --ext ts && eslint src --ext tsx && eslint build --ext js","lint-format":"npx prettier 'src/**/*.ts*' --check && npx prettier 'build/**/*.js' --check","watch":"tsc -watch -p ./","package":"vsce package -o ms-notebook-renderers.vsix","test":"node ./out/test/runTest.js","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write"},"dependencies":{"@jupyter-widgets/base":"^2.0.1","@jupyter-widgets/controls":"^1.5.2","@jupyter-widgets/jupyterlab-manager":"^1.0.2","@jupyter-widgets/output":"^2.0.1","@jupyterlab/coreutils":"^3.1.0","@loadable/component":"^5.12.0","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^7.0.0","@nteract/transform-vega":"7.0.10","@nteract/transforms":"^4.4.4","@phosphor/widgets":"^1.9.3","lodash":"^4.17.21","path-browserify":"^0.0.1","plotly.js-dist":"^2.6.4","re-resizable":"~6.5.5","react":"^16.8.4","react-dom":"^16.8.4","styled-components":"5.2.1","underscore":"^1.13.1","util":"^0.12.3","uuid":"^3.3.2"},"devDependencies":{"@types/glob":"^7.1.1","@types/loadable__component":"^5.10.0","@types/lodash":"^4.14.158","@types/mocha":"^7.0.2","@types/node":"^12.11.7","@types/react":"^16.9.35","@types/react-dom":"^16.9.8","@types/uuid":"^8.0.0","@types/vscode":"^1.60.0","@types/vscode-notebook-renderer":"^1.60.0","@typescript-eslint/eslint-plugin":"^3.1.0","@typescript-eslint/parser":"^3.1.0","cache-loader":"^4.1.0","concurrently":"^5.2.0","copy-webpack-plugin":"^6.0.2","css-loader":"^3.5.3","eslint":"^7.1.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","fork-ts-checker-webpack-plugin":"^4.1.6","glob":"^7.1.6","gulp":"^4.0.2","install":"^0.13.0","less":"^3.11.3","mocha":"^7.2.0","node-loader":"^2.0.0","npm":"^6.14.5","prettier":"^2.0.5","string-replace-webpack-plugin":"^0.1.3","style-loader":"^1.2.1","svg-inline-loader":"^0.8.2","thread-loader":"^2.1.3","ts-loader":"^7.0.5","typescript":"^3.9.3","url-loader":"^4.1.0","vscode-test":"^1.4.0","webpack":"^5.0.0","webpack-bundle-analyzer":"^3.8.0","webpack-cli":"^4.0.0","webpack-fix-default-import-plugin":"^1.0.3"},"optionalDependencies":{"canvas":"^2.7.0"},"uuid":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-toolsai.jupyter-renderers","identifier":{"value":"ms-toolsai.jupyter-renderers","_lower":"ms-toolsai.jupyter-renderers"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-toolsai.jupyter-renderers-1.0.4","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-toolsai.jupyter-renderers-1.0.4","scheme":"file"}},{"name":"cmake-tools","displayName":"CMake Tools","description":"Extended CMake support in Visual Studio Code","version":"1.9.2","publisher":"ms-vscode","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cmake-tools"},"license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-cmake-tools/issues"},"homepage":"https://github.com/microsoft/vscode-cmake-tools","keywords":["cmake","tools","build","c++","native"],"engines":{"vscode":"^1.53.0"},"categories":["Other"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/logo.png","activationEvents":["onCommand:cmake.activeFolderName","onCommand:cmake.activeFolderPath","onCommand:cmake.build","onCommand:cmake.buildAll","onCommand:cmake.buildWithTarget","onCommand:cmake.showBuildCommand","onCommand:cmake.clean","onCommand:cmake.cleanAll","onCommand:cmake.cleanConfigure","onCommand:cmake.cleanConfigureAll","onCommand:cmake.cleanRebuild","onCommand:cmake.cleanRebuildAll","onCommand:cmake.configure","onCommand:cmake.configureAll","onCommand:cmake.showConfigureCommand","onCommand:cmake.ctest","onCommand:cmake.ctestAll","onCommand:cmake.debugTarget","onCommand:cmake.debugTargetAll","onCommand:cmake.editCache","onCommand:cmake.editCacheUI","onCommand:cmake.editKits","onCommand:cmake.viewLog","onCommand:cmake.install","onCommand:cmake.installAll","onCommand:cmake.buildTargetName","onCommand:cmake.launchTarget","onCommand:cmake.launchTargetAll","onCommand:cmake.launchTargetPath","onCommand:cmake.launchTargetDirectory","onCommand:cmake.launchTargetFilename","onCommand:cmake.getLaunchTargetPath","onCommand:cmake.getLaunchTargetDirectory","onCommand:cmake.getLaunchTargetFilename","onCommand:cmake.buildType","onCommand:cmake.buildDirectory","onCommand:cmake.executableTargets","onCommand:cmake.buildKit","onCommand:cmake.tasksBuildCommand","onCommand:cmake.quickStart","onCommand:cmake.resetState","onCommand:cmake.scanForKits","onCommand:cmake.selectActiveFolder","onCommand:cmake.selectLaunchTarget","onCommand:cmake.setVariant","onCommand:cmake.setVariantAll","onCommand:cmake.stop","onCommand:cmake.stopAll","onCommand:cmake.outline.configureAll","onCommand:cmake.outline.buildAll","workspaceContains:CMakeLists.txt","workspaceContains:*/CMakeLists.txt","workspaceContains:*/*/CMakeLists.txt","workspaceContains:*/*/*/CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json"],"main":"./dist/main","contributes":{"commands":[{"command":"cmake.activeFolderName","title":"Get active folder name","category":"CMake"},{"command":"cmake.activeFolderPath","title":"Get active folder path","category":"CMake"},{"command":"cmake.openCMakePresets","title":"Open CMakePresets.json","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addConfigurePreset","title":"Add Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addBuildPreset","title":"Add Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addTestPreset","title":"Add Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.viewLog","title":"Open the CMake Tools Log File","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.logDiagnostics","title":"Log Diagnostics","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectActiveFolder","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.editKits","title":"Edit User-Local CMake Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForCompilers","title":"Scan for Compilers","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.setVariantAll","title":"Select Variant for All Projects","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.showConfigureCommand","title":"Show Configure Command","category":"CMake"},{"command":"cmake.configureAll","title":"Configure All Projects","category":"CMake"},{"command":"cmake.outline.configure","title":"Configure","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"}},{"command":"cmake.outline.configureAll","title":"Configure All Projects","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"}},{"command":"cmake.build","title":"Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.showBuildCommand","title":"Show Build Command","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildNamedTarget","when":"cmake:enableFullFeatureSet","title":"(Internal) Build a Target by Name"},{"command":"cmake.outline.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.compileFile","title":"Compile Active File","category":"CMake","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.compileFile","title":"Compile File","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet","title":"Select Active Folder","icon":"$(gear)"},{"command":"cmake.install","title":"Install","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.installAll","title":"Install All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.cleanConfigure","title":"Delete Cache and Reconfigure","category":"CMake"},{"command":"cmake.cleanConfigureAll","title":"Delete Cache and Reconfigure All Projects","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean Reconfigure"},{"command":"cmake.outline.cleanConfigureAll","title":"Clean Reconfigure All Projects"},{"command":"cmake.clean","title":"Clean","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.cleanAll","title":"Clean All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet","title":"Clean"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet","title":"Clean All Projects"},{"command":"cmake.cleanRebuild","title":"Clean Rebuild","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.cleanRebuildAll","title":"Clean Rebuild All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuild","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild All Projects"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)","category":"CMake"},{"command":"cmake.outline.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)"},{"command":"cmake.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.ctestAll","title":"Run Tests for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.editCache","title":"Edit CMake Cache","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.debugTargetAll","title":"Debug All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.launchTarget","title":"Run Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.launchTargetAll","title":"Run All Projects Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Set Debug Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/stop-icon.svg","light":"res/light/stop-icon.svg"}},{"command":"cmake.outline.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/stop-icon.svg","light":"res/light/stop-icon.svg"}},{"command":"cmake.resetState","title":"Reset CMake Tools Extension State (For troubleshooting)","category":"CMake"},{"command":"cmake.outline.buildTarget","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.runUtilityTarget","when":"cmake:enableFullFeatureSet","title":"Run Utility"},{"command":"cmake.outline.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug"},{"command":"cmake.outline.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal"},{"command":"cmake.outline.setDefaultTarget","when":"cmake:enableFullFeatureSet","title":"Set as Build Target"},{"command":"cmake.outline.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target"},{"command":"cmake.outline.revealInCMakeLists","when":"cmake:enableFullFeatureSet","title":"Open CMakeLists.txt"}],"taskDefinitions":[{"type":"cmake","required":["command"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","enum":["build"],"description":"CMake build command"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"menus":{"commandPalette":[{"command":"cmake.openCMakePresets","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"when":"cmake:enableFullFeatureSet","command":"cmake.viewLog"},{"command":"cmake.configure"},{"command":"cmake.showConfigureCommand"},{"when":"cmake:enableFullFeatureSet && !useCMakePresets","command":"cmake.scanForKits"},{"command":"cmake.scanForCompilers","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"when":"cmake:enableFullFeatureSet && !useCMakePresets","command":"cmake.selectKit"},{"when":"cmake:enableFullFeatureSet && !useCMakePresets","command":"cmake.editKits"},{"command":"cmake.quickStart"},{"when":"cmake:enableFullFeatureSet","command":"cmake.selectActiveFolder"},{"command":"cmake.resetState"},{"command":"cmake.configureAll","when":"cmake:multiRoot"},{"when":"cmake:enableFullFeatureSet","command":"cmake.build"},{"when":"cmake:enableFullFeatureSet","command":"cmake.showBuildCommand"},{"command":"cmake.buildAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet"},{"when":"cmake:enableFullFeatureSet","command":"cmake.install"},{"command":"cmake.installAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet"},{"when":"cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"when":"cmake:enableFullFeatureSet","command":"cmake.compileFile"},{"when":"cmake:enableFullFeatureSet && !useCMakePresets","command":"cmake.setVariant"},{"command":"cmake.setVariantAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet && !useCMakePresets"},{"when":"cmake:enableFullFeatureSet","command":"cmake.setDefaultTarget"},{"command":"cmake.cleanConfigure"},{"command":"cmake.cleanConfigureAll","when":"cmake:multiRoot"},{"when":"cmake:enableFullFeatureSet","command":"cmake.clean"},{"command":"cmake.cleanAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet"},{"when":"cmake:enableFullFeatureSet","command":"cmake.cleanRebuild"},{"command":"cmake.cleanRebuildAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet"},{"when":"cmake:enableFullFeatureSet","command":"cmake.ctest"},{"command":"cmake.ctestAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet"},{"when":"cmake:enableFullFeatureSet","command":"cmake.editCache"},{"command":"cmake.debugTarget","when":"!cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.debugTargetAll","when":"cmake:multiRoot && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTarget","when":"!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTargetAll","when":"cmake:multiRoot && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"when":"cmake:enableFullFeatureSet","command":"cmake.selectLaunchTarget"},{"when":"cmake:enableFullFeatureSet","command":"cmake.stop"},{"command":"cmake.stopAll","when":"cmake:multiRoot && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configure","when":"never"},{"command":"cmake.outline.configureAll","when":"never"},{"command":"cmake.outline.build","when":"never"},{"command":"cmake.outline.buildAll","when":"never"},{"command":"cmake.outline.compileFile","when":"never"},{"command":"cmake.outline.selectWorkspace","when":"never"},{"command":"cmake.outline.cleanConfigure","when":"never"},{"command":"cmake.outline.cleanConfigureAll","when":"never"},{"command":"cmake.outline.clean","when":"never"},{"command":"cmake.outline.cleanAll","when":"never"},{"command":"cmake.outline.cleanRebuild","when":"never"},{"command":"cmake.outline.cleanRebuildAll","when":"never"},{"command":"cmake.outline.editCacheUI","when":"never"},{"command":"cmake.outline.stop","when":"never"},{"command":"cmake.outline.stopAll","when":"never"},{"command":"cmake.outline.buildTarget","when":"never"},{"command":"cmake.outline.runUtilityTarget","when":"never"},{"command":"cmake.outline.debugTarget","when":"never"},{"command":"cmake.outline.launchTarget","when":"never"},{"command":"cmake.outline.setDefaultTarget","when":"never"},{"command":"cmake.outline.setLaunchTarget","when":"never"},{"command":"cmake.outline.revealInCMakeLists","when":"never"}],"view/title":[{"command":"cmake.outline.configureAll","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.buildAll","when":"view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@2"},{"command":"cmake.outline.stopAll","when":"view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.outline.cleanAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuildAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.editCacheUI","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"}],"view/item/context":[{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@1"},{"command":"cmake.outline.buildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@2"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@3"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@4"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@5"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"1_fileActions@6"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"inline"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"inline"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.buildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanConfigureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.cleanRebuildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"}],"touchBar":[{"command":"cmake.quickStart","when":"cmake:enableTouchBar && !cmake:enableFullFeatureSet","group":"CMake:start"},{"command":"cmake.configure","when":"cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.build","alt":"cmake.configure","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.stop","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding","group":"CMake:build"},{"command":"cmake.debugTarget","alt":"cmake.selectLaunchTarget","when":"cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand","group":"CMake:run"},{"command":"cmake.launchTarget","when":"cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand","group":"CMake:run"}]},"configuration":{"type":"object","title":"CMake Tools","properties":{"cmake.autoSelectActiveFolder":{"type":"boolean","default":true,"description":"Select active folder automatically.","scope":"window"},"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use.","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceFolder}/build","description":"The directory where CMake build files will go.","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"type":"string","default":"${workspaceFolder}","description":"The directory of the root CMakeLists.txt file.","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building.","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build.","scope":"window"},"cmake.configureSettings":{"type":"object","default":{},"description":"CMake variables to set on the command line.","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to a cache-initializing CMake file."},{"type":"array","description":"List of cache initializer files.","items":{"type":"string","description":"A cache initializing CMake file."}}],"scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":[],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing).","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use.","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring.","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring.","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring.","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will disable build parallelism.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"description":"The number of parallel test jobs. Use zero to use the value of cmake.parallelJobs.","scope":"resource"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors.","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","description":"Output parsers to use. Supported parsers 'cmake', 'gcc', 'gnuld' for GNULD-style linker output, 'msvc' for Microsoft Visual C++, 'ghs' for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics, and 'diab' for the Wind River Diab compiler.","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs","diab","iar"]},"default":["cmake","gcc","gnuld","msvc","ghs","diab"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target.","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths."},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files."},"externalConsole":{"type":"boolean","description":"Launch an external console for the program."},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console.","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging."},"args":{"type":"array","description":"Arguments to pass to program command line.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program."},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable."},"value":{"type":"string","description":"Value for the environment variable."}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger."},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target.","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.defaultVariants":{"type":"object","$schema":"cmake-tools-schema://schemas/variants-schema.json","default":{"buildType":{"default":"debug","description":"The build type.","choices":{"debug":{"short":"Debug","long":"Disable optimizations - include debug information.","buildType":"Debug"},"release":{"short":"Release","long":"Optimize for speed - exclude debug information.","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size - exclude debug information.","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Optimize for speed - include debug information.","buildType":"RelWithDebInfo"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Arguments to pass to CTest.","default":[],"scope":"resource"},"cmake.ctestDefaultArgs":{"type":"array","items":{"type":"string"},"description":"Arguments passed by default to CTest.","default":["-T","test","--output-on-failure"],"scope":"machine"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":["${env:SystemDrive}/MinGW"],"description":"Directories where MinGW may be installed.","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where Emscripten may be installed.","scope":"window"},"cmake.mergedCompileCommands":{"type":"string","default":null,"description":"Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.","scope":"resource"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure.","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":null,"description":"Automatically configure CMake project directories when they are opened.","scope":"resource"},"cmake.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.","scope":"resource"},"cmake.setBuildTypeOnMultiConfig":{"type":"boolean","default":false,"description":"Set CMAKE_BUILD_TYPE also on multi config generators","scope":"resource"},"cmake.skipConfigureIfCachePresent":{"type":"boolean","default":null,"description":"Skip over the configure process if cache is present.","scope":"resource"},"cmake.cmakeCommunicationMode":{"type":"string","default":"automatic","enum":["legacy","serverApi","fileApi","automatic"],"description":"The protocol used to communicate between the extension and CMake","scope":"resource"},"cmake.ignoreKitEnv":{"type":"boolean","default":false,"description":"Do not use the kit environment variables when running CMake commands.","scope":"resource"},"cmake.buildTask":{"type":"boolean","default":false,"description":"Build using tasks.json instead of internal process.","scope":"resource"},"cmake.outputLogEncoding":{"type":"string","default":"auto","description":"Encoding of the output from external commands (eg.cmake -- build).","scope":"window"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy).","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"},"cmake.touchbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."],"scope":"window"},"cmake.touchbar.advanced":{"type":"object","scope":"window","properties":{"build":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"configure":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"debug":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"launch":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]}}},"cmake.statusbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons in the status bar.","enum":["default","compact","icon","hidden"],"scope":"window"},"cmake.statusbar.advanced":{"type":"object","default":{},"description":"Configures the settings for individual status bar buttons. These settings overwrite the more general 'cmake.statusbar.visibility' setting.","properties":{"configurePreset":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]},"length":{"description":"Configures the maximum length of visible text in 'compact' mode.","type":"integer","default":20}}},"buildPreset":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]},"length":{"description":"Configures the maximum length of visible text in 'compact' mode.","type":"integer","default":20}}},"testPreset":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]},"length":{"description":"Configures the maximum length of visible text in 'compact' mode.","type":"integer","default":20}}},"kit":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]},"length":{"description":"Configures the maximum length of visible text in 'compact' mode.","type":"integer","default":20}}},"status":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"workspace":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"buildTarget":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"build":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"launchTarget":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"debug":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"launch":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]}}},"ctest":{"type":"object","properties":{"visibility":{"type":"string","description":"Configures how the extension displays this button in the status bar.","enum":["default","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this button depending on test results."}}}}},"cmake.additionalKits":{"type":"array","default":[],"description":"Array of paths to custom kit files","items":{"type":"string"},"scope":"resource"},"cmake.revealLog":{"type":"string","default":"always","enum":["focus","always","never"]},"cmake.exportCompileCommandsFile":{"type":"boolean","default":true,"description":"Enables exporting compile_commands.json."},"cmake.useCMakePresets":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.","scope":"resource"},"cmake.allowCommentsInPresetsFile":{"type":"boolean","default":false,"description":"Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.","scope":"resource"}}},"keybindings":[{"key":"f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.build"},{"key":"shift+f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"key":"ctrl+f5","command":"cmake.debugTarget","when":"!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"key":"shift+f5","command":"cmake.launchTarget","when":"!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"}],"viewsContainers":{"activitybar":[{"id":"cmake__viewContainer","title":"CMake","icon":"res/cmake-view-icon.svg","when":"cmake:enableFullFeatureSet"}]},"views":{"cmake__viewContainer":[{"id":"cmake.outline","name":"Project Outline","when":"cmake:enableFullFeatureSet"}]},"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema:///schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"cmake-tools-schema:///schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema:///schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"cmake-tools-schema:///schemas/kits-schema.json"},{"fileMatch":"CMakePresets.json","url":"cmake-tools-schema:///schemas/CMakePresets-v3-schema.json"},{"fileMatch":"CMakeUserPresets.json","url":"cmake-tools-schema:///schemas/CMakePresets-v3-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"vscode:prepublish":"yarn run compile-production","compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && webpack --env BUILD_VSCODE_NLS=true --mode production","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","package":"vsce package --yarn -o cmake-tools.vsix","pretest":"tsc -p test.tsconfig.json","lint":"gulp lint","smokeTests":"yarn run pretest && node ./out/test/smoke/badProject/runTest.js && node ./out/test/smoke/goodProject/runTest.js && node ./out/test/smoke/noCtest/runTest.js","unitTests":"yarn run pretest && node ./out/test/unit-tests/runTest.js","extensionTestsSuccessfulBuild":"yarn run pretest && node ./out/test/extension-tests/successful-build/runTest.js","extensionTestsSingleRoot":"yarn run pretest && node ./out/test/extension-tests/single-root-UI/runTest.js","extensionTestsMultioot":"yarn run pretest && node ./out/test/extension-tests/multi-root-UI/runTest.js","docs":"node ./node_modules/typedoc/bin/typedoc --excludeExternals --out build/docs/dev --readme none src/ types/"},"husky":{"hooks":{"pre-push":"yarn run lint"}},"devDependencies":{"@octokit/rest":"^18.1.1","@types/ajv":"^0.0.5","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","@types/js-yaml":"^4.0.0","@types/json5":"~0.0.30","@types/mocha":"^8.2.2","@types/node":"~14.14.28","@types/rimraf":"^3.0.0","@types/sinon":"~9.0.10","@types/tmp":"^0.2.0","@types/vscode":"1.53.0","@types/which":"~2.0.0","@types/xml2js":"^0.4.8","@typescript-eslint/eslint-plugin":"^4.22.1","@typescript-eslint/eslint-plugin-tslint":"^4.22.1","@typescript-eslint/parser":"^4.22.1","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","clang-format":"^1.5.0","eslint":"^7.25.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jsdoc":"^33.1.0","event-stream":"^4.0.1","fs-extra":"^9.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","husky":"^4.3.8","jsonc-parser":"^3.0.0","mocha":"^8.3.2","module-alias":"^2.2.2","node-loader":"^1.0.2","parse-git-config":"^3.0.0","sinon":"~9.2.4","ts-loader":"^8.0.17","ts-node":"^9.1.1","tslint":"^5.20.1","typedoc":"^0.20.36","typescript":"^4.1.5","vsce":"^1.95.0","vscode-nls-dev":"^3.3.2","vscode-test":"^1.5.2","webpack":"^5.38.1","webpack-cli":"^4.5.0"},"dependencies":{"ajv":"^7.1.0","chokidar":"^3.5.1","handlebars":"^4.7.7","iconv-lite":"^0.6.2","js-yaml":"^4.0.0","json5":"^2.2.0","minimist":"^1.2.5","open":"^7.4.1","rimraf":"^3.0.2","tmp":"^0.2.1","vscode-cpptools":"^5.0.0","vscode-extension-telemetry":"^0.1.7","vscode-tas-client":"^0.1.22","vscode-nls":"^5.0.0","which":"~2.0.2","xml2js":"^0.4.23"},"resolutions":{"chokidar":"^3.5.1","glob-parent":"^5.1.2","https-proxy-agent":"^5.0.0","postcss":"^8.2.10","**/minimist":"^1.2.5","yargs-parser":"^20.2.4","hosted-git-info":"^3.0.8"},"extensionPack":["twxs.cmake"],"uuid":"7c889349-8749-43d4-8b5e-08939936d7f4","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cmake-tools","identifier":{"value":"ms-vscode.cmake-tools","_lower":"ms-vscode.cmake-tools"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-vscode.cmake-tools-1.9.2","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-vscode.cmake-tools-1.9.2","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.8.0-insiders2","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.60.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Multiple settings can cause processes local to the workspace to be executed, e.g. C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, and C_Cpp.default.compileCommands, and the equivalent properties in c_cpp_properties.json."},"virtualWorkspaces":false},"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.RestartIntelliSenseForFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onCommand:C_Cpp.VcpkgClipboardInstallSuggested","onCommand:C_Cpp.VcpkgOnlineHelpSuggested","onCommand:C_Cpp.GenerateEditorConfig","onCommand:C_Cpp.GoToNextDirectiveInGroup","onCommand:C_Cpp.GoToPrevDirectiveInGroup","onCommand:C_Cpp.CheckForCompiler","onCommand:C_Cpp.RunCodeAnalysisOnActiveFile","onCommand:C_Cpp.RunCodeAnalysisOnOpenFiles","onCommand:C_Cpp.RunCodeAnalysisOnAllFiles","onCommand:C_Cpp.ClearCodeAnalysisSquiggles","onDebugInitialConfigurations","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/main","contributes":{"walkthroughs":[{"id":"cppWelcome","title":"Get Started with C++ Development","description":"Dive into VS Code's rich C++ development experience.","when":"false","steps":[{"id":"verify.compiler.mac","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == mac","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"verify.compiler.linux","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == linux","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"verify.compiler.windows","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == windows","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"open.project","title":"Open your project folder","description":"Open an existing folder that contains your C++ project, or create a new folder. \n[Pick a folder](command:workbench.action.files.openFolder)","when":"workspaceFolderCount == 0","media":{"altText":"A screenshot that shows a C++ project opened in the file Explorer.","image":{"light":"walkthrough/images/cpp-folder-explorer-light.png","dark":"walkthrough/images/cpp-folder-explorer-dark.png","hc":"walkthrough/images/cpp-folder-explorer-hc.png"}}},{"id":"setup.intellisense","title":"Configure C++ IntelliSense","description":"Verify important IntelliSense settings like Compiler Path, Compiler Args, IntelliSense Mode, and Include Path. \n[Open IntelliSense Configuration](command:C_Cpp.ConfigurationEditUI?-2)","media":{"altText":"A screenshot that shows the IntelliSense Configurations UI with important settings highlighted.","image":{"light":"walkthrough/images/intellisense-config-light.png","dark":"walkthrough/images/intellisense-config-dark.png","hc":"walkthrough/images/intellisense-config-hc.png"}}},{"id":"run.project.mac","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)","when":"workspacePlatform == mac","media":{"markdown":"dist/walkthrough/debugconfig/run-and-debug-project-mac.md"}},{"id":"run.project.linux","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)","when":"workspacePlatform == linux","media":{"markdown":"dist/walkthrough/debugconfig/run-and-debug-project-linux.md"}},{"id":"run.project.windows","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)","when":"workspacePlatform == windows","media":{"markdown":"dist/walkthrough/debugconfig/run-and-debug-project-windows.md"}},{"id":"install.cmake.tools","title":"Install CMake Tools","description":"Do you build your project with CMake? Install the CMake Tools extension to seamlessly build and debug your CMake project. \n[Install CMake Tools](command:workbench.extensions.installExtension?%22ms-vscode.cmake-tools%22)","completionEvents":["extensionInstalled:ms-vscode.cmake-tools"],"media":{"altText":"A screenshot of the CMake Tools extension page in the Marketplace.","image":{"light":"walkthrough/images/cmake-tools-light.png","dark":"walkthrough/images/cmake-tools-dark.png","hc":"walkthrough/images/cmake-tools-hc.png"}}},{"id":"watch.tutorials","title":"Lean back and get started","description":"Watch this series of short and practical videos about setting up C++ IntelliSense and building and debugging C++ projects. \n[Watch Tutorials](https://code.visualstudio.com/docs/cpp/introvideos-cpp)","media":{"altText":"A screenshot with a preview of the video tutorial and a play button.","image":"walkthrough/images/getting-started-video.png"}}]}],"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task."},"command":{"type":"string","description":"The path to either a compiler or script that performs compilation."},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script."},"options":{"type":"object","description":"Additional command options.","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task."}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results.","when":"cppReferenceTypes:hasResults"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${workspaceFolder}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for language service processing. The value is a hint and may not always be used. The default of `null` (empty) uses the number of logical processors available.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of cached processes to use for language service processing. The default of `null` (empty) uses twice the number of logical processors available.","default":null,"minimum":0,"maximum":256,"scope":"machine"},"C_Cpp.maxMemory":{"type":["integer","null"],"markdownDescription":"The maximum memory (in MB) available for language service processing. Fewer processes will be cached and run concurrently after this memory usage is exceeded. The default of `null` (empty) uses the system's free memory.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.intelliSense.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of IntelliSense processes to keep running. The default of `null` (empty) uses value inherited from `#C_Cpp.maxCachedProcesses#`.","default":null,"minimum":2,"maximum":128,"scope":"machine"},"C_Cpp.intelliSense.maxMemory":{"type":["integer","null"],"markdownDescription":"Older IntelliSense processes will shut down before new processes are created after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.references.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for 'Find All References' and 'Rename'. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.references.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of processes to keep in memory for 'Find All References' and 'Rename'. The default of `0` disables this feature. The value of `null` (empty) uses the value inherited from `#C_Cpp.maxCachedProcesses#`.","default":0,"minimum":0,"maximum":32,"scope":"machine"},"C_Cpp.references.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer 'Find All References' and 'Rename' processes will be cached and run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.codeAnalysis.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for code analysis. The default of `null` (empty) uses half the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.codeAnalysis.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer code analysis processes will run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.codeAnalysis.updateDelay":{"type":"number","default":2000,"markdownDescription":"Controls the delay in milliseconds before code analysis starts processing after a save is triggered from an edit when `#files.autoSave#` is `afterDelay` and `#C_Cpp.codeAnalysis.runAutomatically#` is `true`.","scope":"application","minimum":0,"maximum":6000},"C_Cpp.codeAnalysis.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders and files for code analysis. Files not under the workspace folder are always excluded. Inherits values from `#files.exclude#` and `#C_Cpp.files.exclude#`. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"},"C_Cpp.codeAnalysis.runAutomatically":{"type":"boolean","markdownDescription":"If `true`, code analysis will run automatically on a file after it is opened or saved.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.enabled":{"type":"boolean","default":false,"markdownDescription":"If `true`, code analysis using `clang-tidy` will be enabled and run automatically if `#C_Cpp.codeAnalysis.runAutomatically#` is `true` (the default).","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.path":{"type":"string","markdownDescription":"The full path of the `clang-tidy` executable. If not specified, and `clang-tidy` is available in the environment path, that is used. If not found in the environment path, the `clang-tidy` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.codeAnalysis.clangTidy.config":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`. When the value is empty, `clang-tidy` will attempt to find a file named `.clang-tidy` for each source file in its parent directories.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.fallbackConfig":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format to be used as a fallback when `#C_Cpp.codeAnalysis.clangTidy.config#` is not set and no `.clang-tidy` file is found: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.headerFilter":{"type":["string","null"],"default":null,"markdownDescription":"A POSIX extended regular expression (ERE) matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed. The `${workspaceFolder}` variable is supported (and is used as the default fallback value if no `.clang-tidy` file exists). If this option is not `null` (empty), it overrides the `HeaderFilterRegex` option in a `.clang-tidy` file, if any.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.args":{"type":"array","items":{"type":"string"},"markdownDescription":"Additional command line arguments to pass to `clang-tidy`. These take precedence over the equivalent `C_Cpp.codeAnalysis.clangTidy.*` settings.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.enabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-copy-constructor-init","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-not-null-terminated-result","bugprone-parent-virtual-call","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-swapped-arguments","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl21-cpp","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-fio38-c","cert-flp30-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc50-cpp","cert-msc51-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos44-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-deadcode.DeadStores","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullabilityBase","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-usage","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-malloc","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-check-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-restrict-system-libc-headers","misc-*","misc-definitions-in-headers","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default-member-init","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-move-constructor","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","readability-*","readability-avoid-const-params-in-decls","readability-braces-around-statements","readability-const-return-type","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-else-after-return","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-anyofallof","zircon-temporary-objects"]},"markdownDescription":"List of enabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any. The default check `clang-analyzer-*` is always used unless it is explicitly disabled.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.disabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-copy-constructor-init","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-not-null-terminated-result","bugprone-parent-virtual-call","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-swapped-arguments","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl21-cpp","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-fio38-c","cert-flp30-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc50-cpp","cert-msc51-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos44-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-deadcode.DeadStores","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullabilityBase","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-usage","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-malloc","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-check-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-restrict-system-libc-headers","misc-*","misc-definitions-in-headers","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default-member-init","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-move-constructor","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","readability-*","readability-avoid-const-params-in-decls","readability-braces-around-statements","readability-const-return-type","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-else-after-return","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-anyofallof","zircon-temporary-objects"]},"markdownDescription":"List of disabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any.","scope":"resource"},"C_Cpp.clang_format_path":{"type":"string","markdownDescription":"The full path of the `clang-format` executable. If not specified, and `clang-format` is available in the environment path, that is used. If not found in the environment path, the `clang-format` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","markdownDescription":"Coding style, currently supports: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` to load the style from a `.clang-format` file in the current or parent directory. Use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","Default","Disabled"],"markdownEnumDescriptions":["`clang-format` will be used to format code.","The Visual C++ formatting engine will be used to format code.","By default, `clang-format` will be used to format the code. However, the Visual C++ formatting engine will be used if an `.editorconfig` file with relevant settings is found nearer to the code being formatted and `#C_Cpp.clang_format_style#` is the default value: `file`.","Code formatting will be disabled."],"default":"Default","description":"Configures the formatting engine.","scope":"resource"},"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"markdownDescription":"Braces are indented by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to.","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"markdownEnumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`."],"default":"indent","markdownDescription":"When a new line is typed, it is aligned under the opening parenthesis or based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"markdownDescription":"Labels are indented relative to switch statements by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"markdownDescription":"Code inside a `case` block is indented relative to its label by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"markdownDescription":"Indent braces following a case statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"markdownDescription":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels.","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives.","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"markdownDescription":"Access specifiers are indented relative to class or struct definitions by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"markdownDescription":"Code is indented relative to its enclosing namespace by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"markdownDescription":"Place `catch` and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"markdownDescription":"Place `else` on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"markdownDescription":"Place `while` in a `do`-`while` loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators.","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators.","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"markdownEnumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Code blocks are always formatted based on the values of the `C_Cpp.vcFormat.newLine.*` settings."],"default":"oneLiners","description":"Wrapping options for blocks.","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","markdownDescription":"Name of the predefined style used as a fallback in case `clang-format` is invoked with style `file` but the `.clang-format` file is not found. Possible values are `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`, or use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"markdownDescription":"If set, overrides the include sorting behavior determined by the `SortIncludes` parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider.","enumDescriptions":["Provides context-aware results via a separate IntelliSense process.","Provides \"fuzzy\" results that are not context-aware.","Turns off C/C++ language service features."],"scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","markdownDescription":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing `#include` errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","markdownDescription":"Controls the auto-completion provider. If `Disabled` and you want word-based completion, you will also need to set `\"[cpp]\": {\"editor.wordBasedSuggestions\": true}` (and similarly for `c` and `cuda-cpp` languages).","enumDescriptions":["Uses the active IntelliSense engine.","Uses the word-based completion provided by Visual Studio Code."],"scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. It also controls whether code analysis warnings are reported if includes can't be found. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"markdownDescription":"Controls the opacity of inactive preprocessor blocks. Scales between `0.1` and `1.0`. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","markdownDescription":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: `None` < `Error` < `Warning` < `Information` < `Debug`.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"markdownDescription":"Controls whether files are automatically added to `#files.associations#` when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","markdownDescription":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values `highest`/`high`/`medium`/`low` correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","markdownDescription":"Instructs the extension when to use the `#files.exclude#` (and `#C_Cpp.files.exclude#`) setting when determining which files should be added to the code navigation database while traversing through the paths in the `browse.path` array. If your `#files.exclude#` setting only contains folders, then `checkFolders` is the best choice and will increase the speed at which the extension can initialize the code navigation database.","enumDescriptions":["The exclusion filters will only be evaluated once per folder (individual files are not checked).","The exclusion filters will be evaluated against every file and folder encountered."],"scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","markdownDescription":"The character used as a path separator for `#include` auto-completion results.","scope":"machine-overridable"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"markdownDescription":"If `true`, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","markdownDescription":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ` * ` for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","markdownDescription":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is `%LocalAppData%/Microsoft/vscode-cpptools` on Windows, `$XDG_CACHE_HOME/vscode-cpptools/` on Linux (or `$HOME/.cache/vscode-cpptools/` if `XDG_CACHE_HOME` is not defined), and `$HOME/Library/Caches/vscode-cpptools/` on macOS. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"markdownDescription":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is `5120` MB. Precompiled header caching is disabled when the size is `0`.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"markdownDescription":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default is `4096` and the maximum is `16384`. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":2000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.default.includePath":{"type":"array","items":{"type":"string"},"markdownDescription":"The value to use in a configuration if `includePath` is not specified in `c_cpp_properties.json`. If `includePath` is specified, add `${default}` to the array to insert the values from this setting. Usually, this should not include system includes; instead, set `#C_Cpp.default.compilerPath#`.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":"array","items":{"type":"string"},"markdownDescription":"The value to use in a configuration if `defines` is not specified, or the values to insert if `${default}` is present in `defines`.","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":"array","items":{"type":"string"},"markdownDescription":"The value to use in a configuration if `macFrameworkPath` is not specified, or the values to insert if `${default}` is present in `macFrameworkPath`.","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","markdownDescription":"Version of the Windows SDK include path to use on Windows, e.g. `10.0.17134.0`.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"type":"string","markdownDescription":"The value to use in a configuration if `compileCommands` is either not specified, or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":"array","items":{"type":"string"},"markdownDescription":"The value to use in a configuration if `forcedInclude` is not specified, or the values to insert if `${default}` is present in `forcedInclude`.","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"markdownDescription":"The value to use in a configuration if `intelliSenseMode` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":"string","default":null,"markdownDescription":"The value to use in a configuration if `compilerPath` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerArgs":{"type":"array","items":{"type":"string"},"markdownDescription":"The value to use in configuration if `compilerArgs` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","gnu89","gnu99","gnu11","gnu17"],"markdownDescription":"The value to use in a configuration if `cStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20"],"markdownDescription":"The value to use in a configuration if `cppStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":"string","markdownDescription":"The value to use in a configuration if `configurationProvider` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.mergeConfigurations":{"type":"boolean","markdownDescription":"Set to `true` to merge include paths, defines, and forced includes with those from a configuration provider.","scope":"resource"},"C_Cpp.default.browse.path":{"type":"array","items":{"type":"string"},"default":null,"markdownDescription":"The value to use in a configuration if `browse.path` is not specified, or the values to insert if `${default}` is present in `browse.path`.","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","markdownDescription":"The value to use in a configuration if `browse.databaseFilename` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"markdownDescription":"The value to use in a configuration if `browse.limitSymbolsToIncludedHeaders` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":"array","items":{"type":"string"},"markdownDescription":"The value to use for the system include path. If set, it overrides the system include path acquired via `compilerPath` and `compileCommands` settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"markdownDescription":"The value to use in a configuration if `customConfigurationVariables` is not set, or the values to insert if `${default}` is present as a key in `customConfigurationVariables`.","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"markdownDescription":"Controls whether the extension will report errors detected in `c_cpp_properties.json`.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","markdownDescription":"Set to `Insiders` to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"markdownDescription":"If `true`, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","markdownDescription":"If enabled, code is colorized based on IntelliSense. This setting only applies if `#C_Cpp.intelliSenseEngine#` is set to `Default`.","scope":"window"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from `nan` and `node-addon-api` when they are dependencies.","scope":"application"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"markdownDescription":"If `true`, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"markdownDescription":"If `true`, debugger shell command substitution will use obsolete backtick (`).","scope":"window"},"C_Cpp.codeFolding":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"markdownDescription":"If `true`, autocomplete will automatically add `(` after function calls, in which case `)` may also be added, depending on the value of the `#editor.autoClosingBrackets#` setting.","scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if `#C_Cpp.exclusionPolicy#` is changed). These are specific to the C/C++ extension and are in addition to `#files.exclude#`, but unlike `#files.exclude#` they also apply to paths outside the current workspace folder and are not removed from the Explorer view. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.RestartIntelliSenseForFile","title":"Restart IntelliSense for Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","title":"Run Code Analysis on Active File","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","title":"Run Code Analysis on Open Files","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","title":"Run Code Analysis on All Files","category":"C/C++"},{"command":"C_Cpp.ClearCodeAnalysisSquiggles","title":"Clear Code Analysis Squiggles","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId == 'c' && editorTextFocus || editorLangId == 'cpp' && editorTextFocus || editorLangId == 'cuda-cpp' && editorTextFocus"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target.","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"postRemoteConnectCommands":{"type":"array","description":"One or more commands that execute after remote connection to a debug server.","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"svdPath":{"type":"string","description":"%c_cpp.debuggers.cppdbg.visualizerFile.description","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf').","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exit messages should be logged to the Debug Console. Default: false.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exit messages should be logged to the Debug Console. Default: true.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}}}}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"}],"editor/context":[{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2@1"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.RunCodeAnalysisOnActiveFile","group":"other2@2"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.RestartIntelliSenseForFile","group":"other2@3"}],"commandPalette":[{"command":"C_Cpp.referencesViewGroupByType","when":"cppReferenceTypes:hasResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cppReferenceTypes:hasResults"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[cuda-cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[c]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[Log]":{"editor.wordWrap":"off"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"Style for C++/CLI reference types."},{"id":"cliProperty","superType":"property","description":"Style for C++/CLI properties."},{"id":"genericType","superType":"class","description":"Style for C++/CLI generic types."},{"id":"valueType","superType":"class","description":"Style for C++/CLI value types."},{"id":"templateFunction","superType":"function","description":"Style for C++ template functions."},{"id":"templateType","superType":"class","description":"Style for C++ template types."},{"id":"operatorOverload","superType":"operator","description":"Style for C++ overloaded operators."},{"id":"memberOperatorOverload","superType":"operator","description":"Style for C++ overloaded operator member functions."},{"id":"newOperator","superType":"operator","description":"Style for C++ new or delete operators."},{"id":"customLiteral","superType":"number","description":"Style for C++ user-defined literals."},{"id":"numberLiteral","superType":"number","description":"Style for C++ user-defined literal numbers."},{"id":"stringLiteral","superType":"string","description":"Style for C++ user-defined literal strings."}],"semanticTokenModifiers":[{"id":"global","description":"Style to use for symbols that are global."},{"id":"local","description":"Style to use for symbols that are local."}],"semanticTokenScopes":[{"language":"c","scopes":{"namespace":["entity.name.namespace.c"],"type":["entity.name.type.c"],"type.defaultLibrary":["support.type.c"],"struct":["storage.type.struct.c"],"class":["entity.name.type.class.c"],"class.defaultLibrary":["support.class.c"],"interface":["entity.name.type.interface.c"],"enum":["entity.name.type.enum.c"],"function":["entity.name.function.c"],"function.defaultLibrary":["support.function.c"],"method":["entity.name.function.member.c"],"variable":["variable.other.readwrite.c","entity.name.variable.c"],"variable.readonly":["variable.other.constant.c"],"variable.readonly.defaultLibrary":["support.constant.c"],"parameter":["variable.parameter.c"],"property":["variable.other.property.c"],"property.readonly":["variable.other.constant.property.c"],"enumMember":["variable.other.enummember.c"],"event":["variable.other.event.c"],"label":["entity.name.label.c"],"variable.global":["variable.other.global.c"],"variable.local":["variable.other.local.c"],"property.static":["variable.other.property.static.c"],"method.static":["entity.name.function.member.static.c"],"macro":["entity.name.function.preprocessor.c","entity.name.function.macro.c"],"referenceType":["entity.name.type.class.reference.c"],"cliProperty":["variable.other.property.cli.c"],"genericType":["entity.name.type.class.generic.c"],"valueType":["entity.name.type.class.value.c"],"templateFunction":["entity.name.function.templated.c"],"templateType":["entity.name.type.class.templated.c"],"operatorOverload":["entity.name.function.operator.c"],"memberOperatorOverload":["entity.name.function.operator.member.c"],"newOperator":["keyword.operator.new.c"],"numberLiteral":["entity.name.operator.custom-literal.number.c"],"customLiteral":["entity.name.operator.custom-literal.c"],"stringLiteral":["entity.name.operator.custom-literal.string.c"]}},{"language":"cpp","scopes":{"namespace":["entity.name.namespace.cpp"],"type":["entity.name.type.cpp"],"type.defaultLibrary":["support.type.cpp"],"struct":["storage.type.struct.cpp"],"class":["entity.name.type.class.cpp"],"class.defaultLibrary":["support.class.cpp"],"interface":["entity.name.type.interface.cpp"],"enum":["entity.name.type.enum.cpp"],"function":["entity.name.function.cpp"],"function.defaultLibrary":["support.function.cpp"],"method":["entity.name.function.member.cpp"],"variable":["variable.other.readwrite.cpp","entity.name.variable.cpp"],"variable.readonly":["variable.other.constant.cpp"],"variable.readonly.defaultLibrary":["support.constant.cpp"],"parameter":["variable.parameter.cpp"],"property":["variable.other.property.cpp"],"property.readonly":["variable.other.constant.property.cpp"],"enumMember":["variable.other.enummember.cpp"],"event":["variable.other.event.cpp"],"label":["entity.name.label.cpp"],"variable.global":["variable.other.global.cpp"],"variable.local":["variable.other.local.cpp"],"property.static":["variable.other.property.static.cpp"],"method.static":["entity.name.function.member.static.cpp"],"macro":["entity.name.function.preprocessor.cpp","entity.name.function.macro.cpp"],"referenceType":["entity.name.type.class.reference.cpp"],"cliProperty":["variable.other.property.cli.cpp"],"genericType":["entity.name.type.class.generic.cpp"],"valueType":["entity.name.type.class.value.cpp"],"templateFunction":["entity.name.function.templated.cpp"],"templateType":["entity.name.type.class.templated.cpp"],"operatorOverload":["entity.name.function.operator.cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cpp"],"newOperator":["keyword.operator.new.cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cpp"],"customLiteral":["entity.name.operator.custom-literal.cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cpp"]}},{"language":"cuda-cpp","scopes":{"namespace":["entity.name.namespace.cuda-cpp"],"type":["entity.name.type.cuda-cpp"],"type.defaultLibrary":["support.type.cuda-cpp"],"struct":["storage.type.struct.cuda-cpp"],"class":["entity.name.type.class.cuda-cpp"],"class.defaultLibrary":["support.class.cuda-cpp"],"interface":["entity.name.type.interface.cuda-cpp"],"enum":["entity.name.type.enum.cuda-cpp"],"function":["entity.name.function.cuda-cpp"],"function.defaultLibrary":["support.function.cuda-cpp"],"method":["entity.name.function.member.cuda-cpp"],"variable":["variable.other.readwrite.cuda-cpp","entity.name.variable.cuda-cpp"],"variable.readonly":["variable.other.constant.cuda-cpp"],"variable.readonly.defaultLibrary":["support.constant.cuda-cpp"],"parameter":["variable.parameter.cuda-cpp"],"property":["variable.other.property.cuda-cpp"],"property.readonly":["variable.other.constant.property.cuda-cpp"],"enumMember":["variable.other.enummember.cuda-cpp"],"event":["variable.other.event.cuda-cpp"],"label":["entity.name.label.cuda-cpp"],"variable.global":["variable.other.global.cuda-cpp"],"variable.local":["variable.other.local.cuda-cpp"],"property.static":["variable.other.property.static.cuda-cpp"],"method.static":["entity.name.function.member.static.cuda-cpp"],"macro":["entity.name.function.preprocessor.cuda-cpp","entity.name.function.macro.cuda-cpp"],"referenceType":["entity.name.type.class.reference.cuda-cpp"],"cliProperty":["variable.other.property.cli.cuda-cpp"],"genericType":["entity.name.type.class.generic.cuda-cpp"],"valueType":["entity.name.type.class.value.cuda-cpp"],"templateFunction":["entity.name.function.templated.cuda-cpp"],"templateType":["entity.name.type.class.templated.cuda-cpp"],"operatorOverload":["entity.name.function.operator.cuda-cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cuda-cpp"],"newOperator":["keyword.operator.new.cuda-cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cuda-cpp"],"customLiteral":["entity.name.operator.custom-literal.cuda-cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cuda-cpp"]}}]},"scripts":{"vscode:prepublish":"yarn run compile","compile":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls","compile-dev":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development","compile-watch":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls --watch --progress","compile-dev-watch":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development --watch --progress","generateOptionsSchema":"node ./tools/prepublish.js && node ./out/tools/generateOptionsSchema.js","generate-native-strings":"node ./tools/prepublish.js && gulp generate-native-strings","translations-export":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-export","translations-generate":"node ./tools/prepublish.js && gulp translations-generate","translations-import":"node ./tools/prepublish.js && gulp translations-import","prepublishjs":"node ./tools/prepublish.js","pretest":"tsc -p test.tsconfig.json","generatePackageHashes":"gulp generate-package-hashes","pr-check":"gulp pr-check","lint":"gulp lint","unitTests":"tsc -p test.tsconfig.json && node ./out/test/unitTests/runTest.js","integrationTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/languageServer/runTest.js","intelliSenseFeaturesTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/IntelliSenseFeatures/runTest.js","import-edge-strings":"node ./import_edge_strings.js"},"devDependencies":{"@octokit/rest":"^16.28.9","@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^8.2.2","@types/node":"^14.14.0","@types/plist":"^3.0.2","@types/semver":"^7.1.0","@types/tmp":"^0.1.0","@types/vscode":"1.60.0","@types/which":"^1.3.2","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^4.31.1","@typescript-eslint/eslint-plugin-tslint":"^4.31.1","@typescript-eslint/parser":"^4.31.1","@vscode/test-electron":"^1.6.1","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^7.32.0","eslint-plugin-import":"^2.24.2","eslint-plugin-jsdoc":"^36.1.0","event-stream":"^4.0.1","fs-extra":"^8.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.1","http-proxy-agent":"^2.1.0","minimist":"^1.2.5","mocha":"^8.3.2","parse-git-config":"^3.0.0","parse5":"^5.1.0","parse5-traverse":"^1.0.3","ts-loader":"^8.1.0","tslint":"^5.19.0","typescript":"^4.4.3","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-nls-dev":"^4.0.0-next.1","webpack":"^5.28.0","webpack-cli":"^4.5.0","xml2js":"^0.4.19"},"dependencies":{"comment-json":"^3.0.3","editorconfig":"^0.15.3","escape-string-regexp":"^2.0.0","https-proxy-agent":"^2.2.4","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^3.0.4","tmp":"^0.1.0","vscode-cpptools":"^5.0.0","vscode-extension-telemetry":"^0.1.7","vscode-languageclient":"^5.2.1","vscode-nls":"^4.1.1","vscode-tas-client":"^0.1.22","which":"^2.0.2","yauzl":"^2.10.0"},"resolutions":{"**/mkdirp/minimist":"^0.2.1","ansi-regex":"^5.0.1","yargs-parser":"^15.0.1","y18n":"^5.0.5","hosted-git-info":"^3.0.8","browserslist":"^4.16.6","glob-parent":"^5.1.2","path-parse":"^1.0.7","axios":"^0.21.4","set-value":"^4.0.1"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2175018","platforms":["linux"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"2C657DD48E5C327242C912954315098F81329190C72CE4D4FCB228264BE3AA01"},{"description":"C/C++ language components (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?linkid=2174710","platforms":["linux"],"architectures":["arm"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"22E6BDD91BF0E8592D1101034AE0459E9B103947F246478932650E34C1FAE8C1"},{"description":"C/C++ language components (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?linkid=2174708","platforms":["linux"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"D43ECEC2DCCA9E62B3C3A03C404AC383E570717C4343A3D0C56BADA0991336CD"},{"description":"C/C++ language components (macOS / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2175017","platforms":["darwin"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"3409C9D435F97EBD2F1176124873A675C81A079842F41E6E75EC1A78F454535A"},{"description":"C/C++ language components (macOS / ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2174709","platforms":["darwin"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"3557666DB85407E8CF12BB2C807C83F3ABD55DF811075A91544CC98BC092B9E2"},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2175016","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"40D2953E807B48AB05EDB865F48928B2E09C0C0A84834E4022D6BA6333159F3D"},{"description":"C/C++ language components (Windows ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2174707","platforms":["win32"],"architectures":["arm64"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"040AC8D9BFD5648C283A567520A0B76871593C0594C5F9266CFB5F321BBE0DA8"},{"description":"Clang tools (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2167549","platforms":["linux"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format","./LLVM/bin/clang-tidy"],"integrity":"0B5F60E1D18B14FFF97EA436A080AC03D7A1B591A835E0F2B39C01C058375E36"},{"description":"Clang tools (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?LinkID=2167551","platforms":["linux"],"architectures":["arm"],"binaries":["./LLVM/bin/clang-format","./LLVM/bin/clang-tidy"],"integrity":"80855487EE8E26E16F36A8E45A46366B6EA71AE7CFFB64022612019B014F0ED8"},{"description":"Clang tools (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?LinkID=2167656","platforms":["linux"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format","./LLVM/bin/clang-tidy"],"integrity":"2B5839C2E26DAE6DE9FF555FD096C517C5AEB003297F6DEFEE5290AB73CD0CE6"},{"description":"Clang tools (macOS / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2167655","platforms":["darwin"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format","./LLVM/bin/clang-tidy"],"integrity":"DD9A702A8104D385357D5A192F47E0D8EC516FC6239C8E210C429881F32A21DF"},{"description":"Clang tools (macOS / ARM64)","url":"https://go.microsoft.com/fwlink/?LinkID=2167654","platforms":["darwin"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format","./LLVM/bin/clang-tidy"],"integrity":"D5C827306C7AA94B3C2397E592199F1C68ADD4DB4BECF552B3C02CB280AC875B"},{"description":"Clang tools (Windows x86)","url":"https://go.microsoft.com/fwlink/?LinkID=2167552","platforms":["win32"],"architectures":["x86"],"binaries":["./LLVM/bin/clang-format.exe","./LLVM/bin/clang-tidy.exe"],"integrity":"66BAAC412988FE1E40CE6F94BDE64BB7A2FB7C4E2493EBDBE6B4F994604A3FBD"},{"description":"Clang tools (Windows x64)","url":"https://go.microsoft.com/fwlink/?LinkID=2167550","platforms":["win32"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.exe","./LLVM/bin/clang-tidy.exe"],"integrity":"702AF7F679CB943D3D80C2E68FC7B5708ACAA227E84417F835AE9C6A7468808E"},{"description":"Clang tools (Windows arm64)","url":"https://go.microsoft.com/fwlink/?LinkID=2167548","platforms":["win32"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.exe","./LLVM/bin/clang-tidy.exe"],"integrity":"76032192FE82E8C51A4721E7C9660B3B5755BF75DAF47A71F844F561732A92F5"},{"description":"OpenDebugAD7 (Windows x86/x64)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/b6f4a97889ec460d5a7cb8e880c802ba/win-x86.zip","platforms":["win32"],"architectures":["x86","x64"],"binaries":["./debugAdapters/bin/OpenDebugAD7.exe"],"integrity":"6E3D9651FF1ACCFB90A5CEF0F4B5C3FEFB4B8D0D68EC1A9E662428C0558BB062"},{"description":"OpenDebugAD7 (Windows ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/10847664407c73081a2b1e77368d1b2e/win10-arm64.zip","platforms":["win32"],"architectures":["arm64"],"binaries":["./debugAdapters/bin/OpenDebugAD7.exe"],"integrity":"A583716260318ACA8DDD27E8CAC68A1D1D6F9435871720ABF55740BA7A58096A"},{"description":"OpenDebugAD7 (Linux x64)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/99f1a2287dcf76cc2ad85b800bba9c01/linux-x64.zip","platforms":["linux"],"architectures":["x64"],"binaries":["./debugAdapters/bin/OpenDebugAD7"],"integrity":"5746E5C1372ACC1CB86D599447FBD4E1F8AA6994590AE5FCC9B961BDD09183E9"},{"description":"OpenDebugAD7 (Linux ARM)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/ed287e8059e08c574952f5231ffbc1ba/linux-arm.zip","platforms":["linux"],"architectures":["arm"],"binaries":["./debugAdapters/bin/OpenDebugAD7"],"integrity":"7D6F99793D2824EE996A37357663BDAA6BE929092DD3CEB16C5A532820B0E51D"},{"description":"OpenDebugAD7 (Linux ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/b9dc0e0f12f33d0b88be942cb1ff5ebe/linux-arm64.zip","platforms":["linux"],"architectures":["arm64"],"binaries":["./debugAdapters/bin/OpenDebugAD7"],"integrity":"94BA61786551685D19130F0AE740F6A4EA4D2862B3364E08A53117773CFC1032"},{"description":"OpenDebugAD7 (Alpine Linux x64)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/f74cb83d6e43dfc2c30a9a0ec46d46b4/linux-musl-x64.zip","platforms":["alpine-linux"],"architectures":["x64"],"binaries":["./debugAdapters/bin/OpenDebugAD7"],"integrity":"5B0400B1F28E059CC74AEA02174661659C0FF89F4835E9947C9F853212A72984"},{"description":"OpenDebugAD7 (macOS x64)","url":"https://download.visualstudio.microsoft.com/download/pr/19b0fca0-b008-4b39-9163-6b7a59e50961/7ed17c1525fb70665716366891d2296a/osx-x64.zip","platforms":["darwin"],"architectures":["x64","arm64"],"binaries":["./debugAdapters/bin/OpenDebugAD7"],"integrity":"48C36077BD4BE44E2B62246CDD72F90FAAAE26E3D3199CDC980047F41E31B718"},{"description":"LLDB-MI (macOS Mojave and higher)","url":"https://go.microsoft.com/fwlink/?linkid=2154927","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":false,"binaries":["./debugAdapters/lldb-mi/bin/lldb-mi"],"integrity":"FA76E76C7D8E5D5CD0CC8E68C6FB70A354750D596DF3CED36ABF78AAD5C562C0"},{"description":"LLDB 3.8.0 (macOS High Sierra and lower)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":true,"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"],"integrity":"D4ACCD43F562E42CE30879AC15ADF5FB6AA50656795DCE8F3AD32FB108BB3B7E"},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2169833","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./debugAdapters/vsdbg/bin/vsdbg.exe"],"integrity":"0C36EB31D90EC6FE5BFBD02D62222A7FE8E5BD7D238D9DD086BAAEA66C74FF16"},{"description":"Visual Studio Windows ARM64 Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2169834","platforms":["win32"],"architectures":["arm64"],"binaries":["./debugAdapters/vsdbg/bin/vsdbg.exe"],"integrity":"7DBD8F522420703AA85435A779CAC29B8226A8B92236BEF27AA41E84E4973458"}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-vscode.cpptools-1.8.0-insiders2","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-vscode.cpptools-1.8.0-insiders2","scheme":"file"}},{"name":"cpptools-extension-pack","displayName":"C/C++ Extension Pack","description":"Popular extensions for C++ development in Visual Studio Code.","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","version":"1.1.0","engines":{"vscode":"^1.48.0"},"categories":["Extension Packs"],"keywords":["C","C++","IntelliSense","Microsoft","color-theme","build","cmake","remote","ssh","wsl","remote","codespace","liveshare"],"extensionPack":["ms-vscode.cpptools","ms-vscode.cpptools-themes","twxs.cmake","ms-vscode.cmake-tools","cschlosser.doxdocgen","jeff-hykin.better-cpp-syntax","ms-vscode-remote.remote-wsl","ms-vscode-remote.remote-containers","ms-vscode-remote.remote-ssh"],"uuid":"3957b2f6-f086-49b5-a7b4-5da772123130","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools-extension-pack","identifier":{"value":"ms-vscode.cpptools-extension-pack","_lower":"ms-vscode.cpptools-extension-pack"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-vscode.cpptools-extension-pack-1.1.0","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-vscode.cpptools-extension-pack-1.1.0","scheme":"file"}},{"name":"cpptools-themes","displayName":"C/C++ Themes","description":"UI Themes for C/C++ extension.","version":"1.0.0","publisher":"ms-vscode","preview":false,"icon":"assets/LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","Microsoft","Theme","Themes"],"categories":["Themes"],"contributes":{"themes":[{"id":"Visual Studio Dark - C++","label":"Dark (Visual Studio - C/C++)","uiTheme":"vs-dark","path":"./themes/cpptools_dark_vs.json"},{"id":"Visual Studio Light - C++","label":"Light (Visual Studio - C/C++)","uiTheme":"vs","path":"./themes/cpptools_light_vs.json"}]},"uuid":"99b17261-8f6e-45f0-9ad5-a69c6f509a4f","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools-themes","identifier":{"value":"ms-vscode.cpptools-themes","_lower":"ms-vscode.cpptools-themes"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\ms-vscode.cpptools-themes-1.0.0","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/ms-vscode.cpptools-themes-1.0.0","scheme":"file"}},{"name":"platformio-ide","version":"2.4.0","publisher":"platformio","engines":{"vscode":"^1.57.0"},"license":"Apache-2.0","displayName":"PlatformIO IDE","description":"Professional development environment for Embedded, IoT, Arduino, CMSIS, ESP-IDF, FreeRTOS, libOpenCM3, mbed OS, Pulp OS, SPL, STM32Cube, Zephyr RTOS, ARM, AVR, Espressif (ESP8266/ESP32), FPGA, MCS-51 (8051), MSP430, Nordic (nRF51/nRF52), NXP i.MX RT, PIC32, RISC-V, STMicroelectronics (STM8/STM32), Teensy","categories":["Programming Languages","Debuggers","Other"],"keywords":["embedded","debug","c","c++","microcontroller"],"main":"./dist/extension","icon":"resources/platformio-logo.png","homepage":"https://platformio.org","author":{"name":"PlatformIO.Org"},"bugs":{"url":"https://github.com/platformio/platformio-vscode-ide/issues"},"repository":{"type":"git","url":"https://github.com/platformio/platformio-vscode-ide.git"},"activationEvents":["*"],"contributes":{"languages":[{"id":"platformio-debug.disassembly","aliases":["Disassembly"],"extensions":[".dbgasm"]},{"id":"platformio-debug.memoryview","aliases":["Memory"],"extensions":[".dbgmem"]},{"id":"platformio-debug.asm","aliases":["Assembly","asm"],"extensions":[".asm",".nasm",".yasm",".inc",".s"],"configuration":"./syntaxes/assembly-configuration.json"}],"grammars":[{"language":"platformio-debug.disassembly","scopeName":"source.platformio-debug-disassembly","path":"./syntaxes/platformio-debug-disassembly.json"},{"language":"platformio-debug.memoryview","scopeName":"source.platformio-debug-memoryview","path":"./syntaxes/platformio-debug-memoryview.json"},{"language":"platformio-debug.asm","scopeName":"source.platformio-debug-asm","path":"./syntaxes/assembly.tmLanguage"}],"commands":[{"command":"platformio-ide.privateRunTask","title":"Custom task runner (private)","category":"PlatformIO","enablement":"false"},{"command":"platformio-ide.showHome","title":"Home","category":"PlatformIO"},{"command":"platformio-ide.switchProjectEnv","title":"Switch Project Environment","category":"PlatformIO","icon":"$(root-folder)"},{"command":"platformio-ide.refreshProjectTasks","title":"Refresh Project Tasks","category":"PlatformIO","icon":"$(refresh)"},{"command":"platformio-ide.build","title":"Build","category":"PlatformIO"},{"command":"platformio-ide.upload","title":"Upload","category":"PlatformIO"},{"command":"platformio-ide.clean","title":"Clean","category":"PlatformIO"},{"command":"platformio-ide.test","title":"Test","category":"PlatformIO"},{"command":"platformio-ide.remoteUpload","title":"Remote Upload","category":"PlatformIO"},{"command":"platformio-ide.serialMonitor","title":"Serial Monitor","category":"PlatformIO"},{"command":"platformio-ide.rebuildProjectIndex","title":"Rebuild IntelliSense Index","category":"PlatformIO"},{"command":"platformio-ide.newTerminal","title":"New Terminal","category":"PlatformIO"},{"command":"platformio-ide.openPIOCoreCLI","title":"Open PlatformIO Core CLI","category":"PlatformIO"},{"command":"platformio-ide.startDebugging","title":"Start Debugging","category":"PlatformIO"},{"command":"platformio-ide.updateGlobalLibs","title":"Update global libraries","category":"PlatformIO"},{"command":"platformio-ide.updatePlatforms","title":"Update platforms & packages","category":"PlatformIO"},{"command":"platformio-ide.updateCore","title":"Update All (platforms, packages, libraries)","category":"PlatformIO"},{"command":"platformio-ide.upgradeCore","title":"Upgrade PlatformIO Core to the latest version","category":"PlatformIO"},{"category":"PlatformIO Debug","command":"platformio-debug.peripherals.updateNode","title":"Update Value"},{"category":"PlatformIO Debug","command":"platformio-debug.peripherals.selectedNode","title":"Selected"},{"category":"PlatformIO Debug","command":"platformio-debug.registers.selectedNode","title":"Selected"},{"category":"PlatformIO Debug","command":"platformio-debug.peripherals.copyValue","title":"Copy Value"},{"category":"PlatformIO Debug","command":"platformio-debug.registers.copyValue","title":"Copy Value"},{"category":"PlatformIO Debug","command":"platformio-debug.peripherals.setFormat","title":"Set Value Format"},{"category":"PlatformIO Debug","command":"platformio-debug.registers.setFormat","title":"Set Value Format"},{"category":"PlatformIO Debug","command":"platformio-debug.examineMemory","title":" View Memory","icon":{"light":"resources/icons/add.svg","dark":"resources/icons/add-inverse.svg"}},{"category":"PlatformIO Debug","command":"platformio-debug.memory.clearHistory","title":"Clear Memory View History","icon":{"light":"resources/icons/closeall.svg","dark":"resources/icons/closeall-inverse.svg"}},{"category":"PlatformIO Debug","command":"platformio-debug.memory.deleteHistoryItem","title":"Delete"},{"category":"PlatformIO Debug","command":"platformio-debug.viewDisassembly","title":"View Disassembly (Function)"},{"category":"PlatformIO Debug","command":"platformio-debug.setForceDisassembly","title":"Set Force Disassembly"}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"platformio-debug.asm"},{"language":"platformio-debug.disassembly"}],"debuggers":[{"configurationAttributes":{"launch":{"properties":{"executable":{"description":"Path of firmware or program","type":"string"},"toolchainBinDir":{"description":"Path of toolchain binary directory","type":"string"},"projectEnvName":{"description":"Working project environment","type":"string"},"svdPath":{"default":null,"description":"Path to an SVD file describing the peripherals of the microcontroller","type":["string","null"]},"loadMode":{"description":"Control when PlatformIO should load debugging firmware to the end target (see docs for `debug_load_mode` option)","default":null,"type":["string","null"],"enum":["always","modified","manual"]},"showDevDebugOutput":{"default":false,"description":"Prints all GDB responses to the console","type":"boolean"}},"required":["executable","toolchainBinDir"]}},"initialConfigurations":[{"name":"PlatformIO Debugger","request":"launch","type":"platformio-debug","toolchainBinDir":"/usr/local/bin"}],"configurationSnippets":[{"body":{"name":"${6:PlatformIO Debugger}","request":"launch","type":"platformio-debug","executable":".pio/build/myenv/firmware.elf","toolchainBinDir":"/usr/local/bin"},"description":"PlatformIO Debugger","label":"PlatformIO Debugger"}],"label":"PlatformIO Debugger","program":"./node_modules/platformio-vscode-debug/dist/adapter.js","runtime":"node","type":"platformio-debug"}],"menus":{"commandPalette":[{"command":"platformio-debug.examineMemory","when":"debugType == platformio-debug"},{"command":"platformio-debug.memory.clearHistory","when":"debugType == platformio-debug"},{"command":"platformio-debug.viewDisassembly","when":"debugType == platformio-debug"},{"command":"platformio-debug.setForceDisassembly","when":"debugType == platformio-debug"}],"view/item/context":[{"command":"platformio-debug.peripherals.updateNode","when":"view == platformio-debug.peripherals && viewItem == field"},{"command":"platformio-debug.peripherals.updateNode","when":"view == platformio-debug.peripherals && viewItem == registerRW"},{"command":"platformio-debug.peripherals.updateNode","when":"view == platformio-debug.peripherals && viewItem == registerWO"},{"command":"platformio-debug.peripherals.copyValue","when":"view == platformio-debug.peripherals && viewItem == field"},{"command":"platformio-debug.peripherals.copyValue","when":"view == platformio-debug.peripherals && viewItem == registerRW"},{"command":"platformio-debug.peripherals.copyValue","when":"view == platformio-debug.peripherals && viewItem == registerRO"},{"command":"platformio-debug.registers.copyValue","when":"view == platformio-debug.registers && viewItem == register"},{"command":"platformio-debug.registers.copyValue","when":"view == platformio-debug.registers && viewItem == field"},{"command":"platformio-debug.peripherals.setFormat","when":"view == platformio-debug.peripherals"},{"command":"platformio-debug.registers.setFormat","when":"view == platformio-debug.registers"},{"command":"platformio-debug.memory.deleteHistoryItem","when":"view == platformio-debug.memory","group":"inline"}],"view/title":[{"command":"platformio-ide.switchProjectEnv","when":"pioCoreReady && pioMultiEnvProject && view == platformio-ide.projectTasks","group":"navigation"},{"command":"platformio-ide.refreshProjectTasks","when":"pioCoreReady && view == platformio-ide.projectTasks","group":"navigation"},{"command":"platformio-debug.examineMemory","when":"debugType == platformio-debug && view == platformio-debug.memory","group":"navigation"},{"command":"platformio-debug.memory.clearHistory","when":"debugType == platformio-debug && view == platformio-debug.memory","group":"navigation"}]},"viewsContainers":{"activitybar":[{"id":"platformio","title":"PlatformIO","icon":"resources/platformio-activity-icon.svg","when":"pioCoreReady"}]},"views":{"platformio":[{"id":"platformio-ide.projectTasks","name":"Project Tasks","when":"pioProjectReady"},{"id":"platformio-activitybar.quickAccess","name":"Quick Access","when":"pioCoreReady"}],"debug":[{"id":"platformio-debug.peripherals","name":"Peripherals"},{"id":"platformio-debug.registers","name":"Registers"},{"id":"platformio-debug.memory","name":"Memory"},{"id":"platformio-debug.disassembly","name":"Disassembly"}]},"keybindings":[{"command":"platformio-ide.build","key":"ctrl+alt+b"},{"command":"platformio-ide.upload","key":"ctrl+alt+u"},{"command":"platformio-ide.serialMonitor","key":"ctrl+alt+s"},{"command":"workbench.action.tasks.runTask","key":"ctrl+alt+t"}],"taskDefinitions":[{"type":"PlatformIO","required":["task"],"properties":{"task":{"type":"string","description":"PlatformIO Task ID"}}}],"problemMatchers":[{"name":"platformio","owner":"cpp","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^([^:\\n]+):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"PlatformIO IDE configuration","properties":{"platformio-ide.activateOnlyOnPlatformIOProject":{"type":"boolean","default":false,"description":"Activate the PlatformIO extension only when a PlatformIO-based project (with `platformio.ini`) is opened in the workspace"},"platformio-ide.activateProjectOnTextEditorChange":{"type":"boolean","default":false,"description":"Automatically activate project depending on an active opened text editor"},"platformio-ide.autoOpenPlatformIOIniFile":{"type":"boolean","default":true,"description":"Automatically open the `platformio.ini` file from a project when no other editors are opened"},"platformio-ide.autoCloseSerialMonitor":{"type":"boolean","default":true,"description":"Automatically close Serial Port Monitor before uploading/testing"},"platformio-ide.autoRebuildAutocompleteIndex":{"type":"boolean","default":true,"description":"Automatically rebuild the project IntelliSense index when platformio.ini is changed or when new libraries are installed."},"platformio-ide.buildTask":{"type":["string","null"],"default":null,"description":"The build task (label) used for the `Build` button in the bottom toolbar and for key bindings. The default is `PlatformIO: Build`."},"platformio-ide.autoPreloadEnvTasks":{"type":"boolean","default":false,"description":"Automatically preload ALL project environment tasks"},"platformio-ide.customPATH":{"type":["string","null"],"default":null,"description":"Custom PATH for the `platformio` command, if you prefer to use a custom version of PlatformIO Core. Fill in the result of the system terminal command `echo $PATH` (Unix) / `echo %PATH%` (Windows)."},"platformio-ide.disableToolbar":{"type":"boolean","default":false,"description":"Disable the PlatformIO toolbar"},"platformio-ide.forceUploadAndMonitor":{"type":"boolean","default":false,"description":"Force the `platformio-ide.upload` command to use the 'Upload and Monitor' task"},"platformio-ide.reopenSerialMonitorDelay":{"type":"integer","default":0,"minimum":0,"description":"Time in milliseconds after which the Serial Port Monitor is reopened"},"platformio-ide.useBuiltinPython":{"type":"boolean","default":true,"description":"Use a portable Python 3 Interpreter if available"},"platformio-ide.useBuiltinPIOCore":{"type":"boolean","default":true,"description":"Use a built-in PlatformIO Core"},"platformio-ide.useDevelopmentPIOCore":{"type":"boolean","default":false,"description":"Use a development version of PlatformIO Core"},"platformio-ide.disablePIOHomeStartup":{"type":"boolean","default":false,"description":"Disable showing PIO Home at startup"},"platformio-ide.pioHomeServerHttpHost":{"type":"string","default":"127.0.0.1","description":"PIO Home server HTTP host (default is 127.0.0.1, but in case of dockerized environments 0.0.0.0)"},"platformio-ide.pioHomeServerHttpPort":{"type":"integer","description":"PIO Home server HTTP port (the default value 0 automatically assigns a free port in the range [8010..8100])"},"platformio-ide.customPyPiIndexUrl":{"type":["string","null"],"default":null,"description":"Custom base URL of the Python Package Index (default `https://pypi.org/simple`)"}}}},"scripts":{"build":"webpack --mode production","lint":"eslint .eslintrc.js src","format":"prettier --single-quote --print-width 88 --write \"src/**/*.js\"","vscode:package":"webpack --mode production && vsce package"},"dependencies":{"fs-plus":"~3.1.1","platformio-node-helpers":"~9.4.0","platformio-vscode-debug":"~1.4.0"},"devDependencies":{"@babel/core":"~7.16.0","@babel/eslint-parser":"~7.16.0","@babel/plugin-proposal-class-properties":"~7.16.0","@babel/preset-env":"~7.16.0","@types/node":"~12","@types/vscode":"~1.57.0","babel-loader":"~8.2.3","eslint":"~8.1.0","eslint-import-resolver-webpack":"~0.13.2","eslint-plugin-import":"~2.25.2","prettier":"~2.4.1","vsce":"~2.2.0","webpack":"~5.61.0","webpack-cli":"~4.9.1"},"extensionDependencies":["ms-vscode.cpptools"],"uuid":"6cf182b2-70cf-433e-97f2-45f414c9ad89","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"platformio.platformio-ide","identifier":{"value":"platformio.platformio-ide","_lower":"platformio.platformio-ide"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\platformio.platformio-ide-2.4.0","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/platformio.platformio-ide-2.4.0","scheme":"file"}},{"name":"cmake","version":"0.0.17","publisher":"twxs","displayName":"CMake","description":"CMake langage support for Visual Studio Code","author":{"name":"Nicolas Martin"},"repository":{"type":"git","url":"https://github.com/twxs/vs.language.cmake.git"},"bugs":{"url":"https://github.com/twxs/vs.language.cmake/issues"},"homepage":"https://github.com/twxs/vs.language.cmake/blob/master/README.md","keywords":["CMake","Syntax"],"categories":["Languages","Snippets","Other"],"icon":"images/icon.png","galleryBanner":{"color":"#5c2d91","theme":"dark"},"license":"MIT","activationEvents":["onLanguage:cmake"],"engines":{"vscode":"^1.10.0"},"main":"./out/extension","contributes":{"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"commands":[{"command":"cmake.onlineHelp","title":"CMake: Online Help"}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage"}],"configuration":{"title":"CMake configuration","properties":{"cmake.cmakePath":{"type":"string","default":"cmake","description":"The path to CMake generator executable"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"opener":"^1.4.2"},"devDependencies":{"typescript":"^2.0.9","vscode":"^1.0.3","@types/node":"^6.0.47","mocha":"^3.1.2","@types/mocha":"^2.2.33"},"uuid":"2be7cf14-2603-402e-9771-fd79df83cdf8","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"twxs.cmake","identifier":{"value":"twxs.cmake","_lower":"twxs.cmake"},"extensionLocation":{"$mid":1,"fsPath":"c:\\Users\\Racarla\\Documents\\Git\\VSCode_Portable\\Installation\\VSCode-win32-x64-1.63.0\\data\\extensions\\twxs.cmake-0.0.17","_sep":1,"path":"/C:/Users/Racarla/Documents/Git/VSCode_Portable/Installation/VSCode-win32-x64-1.63.0/data/extensions/twxs.cmake-0.0.17","scheme":"file"}}]}